{
  "openapi": "3.0.3",
  "info": {
    "title": "Contabo API",
    "description": "# Introduction\n\nContabo API allows you to manage your resources using HTTP requests.\nThis documentation includes a set of HTTP endpoints that are designed to RESTful principles.\nEach endpoint includes descriptions, request syntax, and examples.\n\nContabo provides also a CLI tool which enables you to manage your resources easily from the command line. [CLI Download and  Installation instructions.](https://github.com/contabo/cntb)\n\n## Product documentation\n\nIf you are looking for description about the products themselves and their usage in general or for specific purposes, please check the [Contabo Product Documentation](https://docs.contabo.com/).\n\n## Getting Started\n\nIn order to use the Contabo API you will need the following credentials which are available from the [Customer Control Panel](https://my.contabo.com/api/details):\n1. ClientId\n2. ClientSecret\n3. API User (your email address to login to the [Customer Control Panel](https://my.contabo.com/api/details))\n4. API Password (this is a new password which you'll set or change in the [Customer Control Panel](https://my.contabo.com/api/details))\n\nYou can either use the API directly or by using the `cntb` CLI (Command Line Interface) tool.\n\n### Using the API directly\n\n#### Via `curl` for Linux/Unix like systems\n\nThis requires `curl` and `jq` in your shell (e.g. `bash`, `zsh`). Please replace the first four placeholders with actual values.\n\n```sh\nCLIENT_ID=<ClientId from Customer Control Panel>\nCLIENT_SECRET=<ClientSecret from Customer Control Panel>\nAPI_USER=<API User from Customer Control Panel>\nAPI_PASSWORD='<API Password from Customer Control Panel>'\nACCESS_TOKEN=$(curl -d \"client_id=$CLIENT_ID\" -d \"client_secret=$CLIENT_SECRET\" --data-urlencode \"username=$API_USER\" --data-urlencode \"password=$API_PASSWORD\" -d 'grant_type=password' 'https://auth.contabo.com/auth/realms/contabo/protocol/openid-connect/token' | jq -r '.access_token')\n# get list of your instances\ncurl -X GET -H \"Authorization: Bearer $ACCESS_TOKEN\" -H \"x-request-id: 51A87ECD-754E-4104-9C54-D01AD0F83406\" \"https://api.contabo.com/v1/compute/instances\" | jq\n```\n\n#### Via `PowerShell` for Windows\n\nPlease open `PowerShell` and execute the following code after replacing the first four placeholders with actual values.\n\n```powershell\n$client_id='<ClientId from Customer Control Panel>'\n$client_secret='<ClientSecret from Customer Control Panel>'\n$api_user='<API User from Customer Control Panel>'\n$api_password='<API Password from Customer Control Panel>'\n$body = @{grant_type='password'\nclient_id=$client_id\nclient_secret=$client_secret\nusername=$api_user\npassword=$api_password}\n$response = Invoke-WebRequest -Uri 'https://auth.contabo.com/auth/realms/contabo/protocol/openid-connect/token' -Method 'POST' -Body $body\n$access_token = (ConvertFrom-Json $([String]::new($response.Content))).access_token\n# get list of your instances\n$headers = @{}\n$headers.Add(\"Authorization\",\"Bearer $access_token\")\n$headers.Add(\"x-request-id\",\"51A87ECD-754E-4104-9C54-D01AD0F83406\")\nInvoke-WebRequest -Uri 'https://api.contabo.com/v1/compute/instances' -Method 'GET' -Headers $headers\n```\n\n### Using the Contabo API via the `cntb` CLI tool\n\n1. Download `cntb` for your operating system (MacOS, Windows and Linux supported) [here](https://github.com/contabo/cntb)\n2. Unzip the downloaded file\n3. You might move the executable to any location on your disk. You may update your `PATH` environment variable for easier invocation.\n4. Configure it once to use your credentials\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ```sh\n   cntb config set-credentials --oauth2-clientid=<ClientId from Customer Control Panel> --oauth2-client-secret=<ClientSecret from Customer Control Panel> --oauth2-user=<API User from Customer Control Panel> --oauth2-password='<API Password from Customer Control Panel>'\n   ```\n\n5. Use the CLI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ```sh\n   # get list of your instances\n   cntb get instances\n   # help\n   cntb help\n   ```\n\n## API Overview\n\n### [Compute Management](#tag/Instances)\n\nThe Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping) of VPS and VDS (please note that Storage VPS are not supported via API or CLI) as well as managing snapshots and custom images. It also offers you to take advantage of [cloud-init](https://cloud-init.io/) at least on our default / standard images (for custom images you'll need to provide cloud-init support packages). The API offers provisioning of cloud-init scripts via the `user_data` field.\n\nCustom images must be provided in `.qcow2` or `.iso` format. This gives you even more flexibility for setting up your environment.\n\n### [Object Storage](#tag/Object-Storages)\n\nThe Object Storage API allows you to order, upgrade, cancel and control the auto-scaling feature for [S3](https://en.wikipedia.org/wiki/Amazon_S3) compatible object storage. You may also get some usage statistics. You can only buy one object storage per location. In case you need more storage space in a location you can purchase more space or enable the auto-scaling feature to purchase automatically more storage space up to the specified monthly limit.\n\nPlease note that this is not the S3 compatible API. It is not documented here. The S3 compatible API needs to be used with the corresponding credentials, namely an `access_key` and `secret_key`. Those can be retrieved by invoking the User Management API. All purchased object storages in different locations share the same credentials. You are free to use S3 compatible tools like [`aws`](https://aws.amazon.com/cli/) cli or similar.\n\n### [Private Networking](#tag/Private-Networks)\n\nThe Private Networking API allows you to manage private networks / Virtual Private Clouds (VPC) for your Cloud VPS and VDS (please note that Storage VPS are not supported via API or CLI). Having a private network allows the associated instances to have a private and direct network connection. The traffic won't leave the data center and cannot be accessed by any other instance.\n\nWith this feature you can create multi layer systems, e.g. having a database server being only accessible from your application servers in one private network and keep the database replication in a second, separate network. This increases the speed as the traffic is NOT routed to the internet and also security as the traffic is within it's own secured VLAN.\n\nAdding a Cloud VPS or VDS to a private network requires a reinstallation to make sure that all relevant parts for private networking are in place. When adding the same instance to another private network it will require a restart in order to make additional virtual network interface cards (NICs) available.\n\nPlease note that for each instance being part of one or several private networks a payed add-on is required. You can automatically purchase it via the Compute Management API.\n\n### [Secrets Management](#tag/Secrets)\n\nYou can optionally save your passwords or public ssh keys using the Secrets Management API. You are not required to use it there will be no functional disadvantages.\n\nBy using that API you can easily reuse you public ssh keys when setting up different servers without the need to look them up every time. It can also be used to allow Contabo Supporters to access\nyour machine without sending the passwords via potentially unsecure emails.\n\n### [User Management](#tag/Users)\n\nIf you need to allow other persons or automation scripts to access specific API endpoints resp. resources the User Management API comes into play. With that API you are able to manage users having possibly restricted access. You are free to define those restrictions to fit your needs. So beside an arbitrary number of users you basically define any number of so called `roles`. Roles allows access and must be one of the following types:\n\n* `apiPermission`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   This allows you to specify a restriction to certain functions of an API by allowing control over POST (=Create), GET (=Read), PUT/PATCH (=Update) and DELETE (=Delete) methods for each API endpoint (URL) individually.\n* `resourcePermission`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   In order to restrict access to specific resources create a role with `resourcePermission` type by specifying any number of [tags](#tag-management). These tags need to be assigned to resources for them to take effect. E.g. a tag could be assigned to several compute resources. So that a user with that role (and of course access to the API endpoints via `apiPermission` role type) could only access those compute resources.\n\nThe `roles` are then assigned to a `user`. You can assign one or several roles regardless of the role's type. Of course you could also assign a user `admin` privileges without specifying any roles.\n\n### [Tag Management](#tag/Tags)\n\nThe Tag Management API allows you to manage your tags in order to organize your resources in a more convenient way. Simply assign a tag to resources like a compute resource to manage them.The assignments of tags to resources will also enable you to control access to these specific resources to users via the [User Management API](#user-management). For convenience reasons you might choose a color for tag. The Customer Control Panel will use that color to display the tags.\n\n## Requests\n\nThe Contabo API supports HTTP requests like mentioned below. Not every endpoint supports all methods. The allowed methods are listed within this documentation.\n\nMethod | Description\n---    | ---\nGET    | To retrieve information about a resource, use the GET method.<br>The data is returned as a JSON object. GET methods are read-only and do not affect any resources.\nPOST   | Issue a POST method to create a new object. Include all needed attributes in the request body encoded as JSON.\nPATCH  | Some resources support partial modification with PATCH,<br>which modifies specific attributes without updating the entire object representation.\nPUT    | Use the PUT method to update information about a resource.<br>PUT will set new values on the item without regard to their current values.\nDELETE | Use the DELETE method to destroy a resource in your account.<br>If it is not found, the operation will return a 4xx error and an appropriate message.\n\n## Responses\n\nUsually the Contabo API should respond to your requests. The data returned is in [JSON](https://www.json.org/) format allowing easy processing in any programming language or tools.\n\nAs common for HTTP requests you will get back a so called HTTP status code. This gives you overall\ninformation about success or error. The following table lists common HTTP status codes.\n\nPlease note that the description of the endpoints and methods are not listing all possibly status codes in detail as they are generic. Only special return codes with\ntheir resp. response data are explicitly listed.\n\nResponse Code | Description\n--- | ---\n200 | The response contains your requested information.\n201 | Your request was accepted. The resource was created.\n204 | Your request succeeded, there is no additional information returned.\n400 | Your request was malformed.\n401 | You did not supply valid authentication credentials.\n402 | Request refused as it requires additional payed service.\n403 | You are not allowed to perform the request.\n404 | No results were found for your request or resource does not exist.\n409 | Conflict with resources. For example violation of unique data constraints detected when trying to create or change resources.\n429 | Rate-limit reached. Please wait for some time before doing more requests.\n500 | We were unable to perform the request due to server-side problems. In such cases please retry or contact the support.\n\nNot every endpoint returns data. For example DELETE requests usually don't return any data. All others do return data. For easy handling the return values consists of metadata denoted with and underscore (\"_\") like `_links` or `_pagination`. The actual data is returned in a field called `data`. For convenience reasons this `data` field is always returned as an array even if it consists of only one single element.\n\nSome general details about Contabo API from [Contabo](https://contabo.com).\n",
    "termsOfService": "https://contabo.com/en/legal/terms-and-conditions/",
    "contact": {
      "email": "support@contabo.com",
      "url": "https://contabo.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.contabo.com"
    }
  ],
  "paths": {
    "/v1/compute/instances/{instanceId}/snapshots": {
      "get": {
        "operationId": "retrieveSnapshotList",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X GET 'https://api.contabo.com/v1/compute/instances/12345/snapshots' -H 'Content-Type: application/json' -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H 'x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31' -H 'x-trace-id: 123213'"
          },
          {
            "lang": "cntb CLI",
            "source": "cntb get snapshots 12345"
          }
        ],
        "summary": "List snapshots",
        "description": "List and filter all your snapshots for a specific instance",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "required": true,
            "in": "path",
            "description": "The identifier of the instance",
            "example": 12345,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Number of page to be fetched.",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of elements per page.",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "example": "name:asc",
            "description": "Specify fields and ordering (ASC for ascending, DESC for descending) in following format `field:ASC|DESC`.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter as substring match for snapshots names.",
            "example": "Snapshot.Server",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response will be a JSON object and contains a paginated list of snapshots attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSnapshotResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Snapshots"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createSnapshot",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://api.contabo.com/v1/compute/instances/12345/snapshots' -H 'Content-Type: application/json' -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H 'x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31' -H 'x-trace-id: 123213' -d '{\"name\":\"Snapshot-Server\",\"description\":\"Snapshot-Description\"}'"
          },
          {
            "lang": "cntb CLI",
            "source": "cntb create snapshot 12345 --name 'Snapshot-Server' --description 'Snapshot-Description'"
          }
        ],
        "summary": "Create a new instance snapshot",
        "description": "Create a new snapshot for instance, with name and description attributes",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "required": true,
            "in": "path",
            "description": "The identifier of the instance",
            "example": 12345,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSnapshotRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response will be a JSON object and contains standard snapshot attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Snapshots"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/compute/instances/{instanceId}/snapshots/{snapshotId}": {
      "get": {
        "operationId": "retrieveSnapshot",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X GET 'https://api.contabo.com/v1/compute/instances/12345/snapshots/snap1628603855' -H 'Content-Type: application/json' -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H 'x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31' -H 'x-trace-id: 123213'"
          },
          {
            "lang": "cntb CLI",
            "source": "cntb get snapshot 12345 snap1628603855"
          }
        ],
        "summary": "Retrieve a specific snapshot by id",
        "description": "Get all attributes for a specific snapshot",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "required": true,
            "in": "path",
            "description": "The identifier of the instance",
            "example": 12345,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "snapshotId",
            "required": true,
            "in": "path",
            "description": "The identifier of the snapshot",
            "example": "snap1628603855",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response will be a JSON object and contains standard snapshot attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindSnapshotResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Snapshots"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateSnapshot",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X PATCH 'https://api.contabo.com/v1/compute/instances/12345/snapshots/snap1628603855' -H 'Content-Type: application/json' -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H 'x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31' -H 'x-trace-id: 123213' -d '{\"name\":\"Snapshot\"}'"
          },
          {
            "lang": "cntb CLI",
            "source": "cntb update snapshot 12345 snap1628603855 --name 'Snapshot'"
          }
        ],
        "summary": "Update specific snapshot by id",
        "description": "Update attributes of a snapshot. You may only specify the attributes you want to change. If an attribute is not set, it will retain its original value.",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "required": true,
            "in": "path",
            "description": "The identifier of the instance",
            "example": 12345,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "snapshotId",
            "required": true,
            "in": "path",
            "description": "The identifier of the snapshot",
            "example": "snap1628603855",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSnapshotRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response will be a JSON object and contains standard snapshot attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSnapshotResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Snapshots"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteSnapshot",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X DELETE 'https://api.contabo.com/v1/compute/instances/12345/snapshots/snap1628603855' -H 'Content-Type: application/json' -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H 'x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31' -H 'x-trace-id: 123213'"
          },
          {
            "lang": "cntb CLI",
            "source": "cntb delete snapshot 12345 snap1628603855"
          }
        ],
        "summary": "Delete existing snapshot by id",
        "description": "Delete existing instance snapshot by id",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "required": true,
            "in": "path",
            "description": "The identifier of the instance",
            "example": 12345,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "snapshotId",
            "required": true,
            "in": "path",
            "description": "The identifier of the snapshot",
            "example": "snap1628603855",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Response body has no content"
          }
        },
        "tags": [
          "Snapshots"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/compute/instances/{instanceId}/snapshots/{snapshotId}/rollback": {
      "post": {
        "operationId": "rollbackSnapshot",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X POST 'https://api.contabo.com/v1/compute/instances/12345/snapshots/snap1628603855/rollback' -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H 'x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31' -H 'x-trace-id: 123213'"
          },
          {
            "lang": "cntb CLI",
            "source": "cntb rollback snapshot 12345 snap1628603855"
          }
        ],
        "summary": "Revert the instance to a particular snapshot based on its identifier",
        "description": "Rollback the instance to a specific snapshot. In case the snapshot is not the latest one, it will automatically delete all the newer snapshots of the instance",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "required": true,
            "in": "path",
            "description": "The identifier of the instance",
            "example": 12345,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "snapshotId",
            "required": true,
            "in": "path",
            "description": "The identifier of the snapshot",
            "example": "snap1628603855",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RollbackSnapshotRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response will be a JSON object and contains standard snapshot attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RollbackSnapshotResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Snapshots"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/compute/images/audits": {
      "get": {
        "operationId": "retrieveImageAuditsList",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X GET -H \"Content-Type: application/json\" -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H \"x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31\" -H  \"x-trace-id: 123213\" \"https://api.contabo.com/v1/compute/images/audits\""
          },
          {
            "lang": "cntb CLI",
            "source": "cntb history images"
          }
        ],
        "summary": "List history about your custom images (audit)",
        "description": "List and filters the history about your custom images.",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Number of page to be fetched.",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of elements per page.",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "example": "name:asc",
            "description": "Specify fields and ordering (ASC for ascending, DESC for descending) in following format `field:ASC|DESC`.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "imageId",
            "required": false,
            "in": "query",
            "example": "e443eab5-647a-4bc3-b4f9-16f5a281224d",
            "description": "The identifier of the image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "required": false,
            "in": "query",
            "example": "D5FD9FAF-58C0-4406-8F46-F449B8E4FEC3",
            "description": "The requestId of the API call which led to the change.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changedBy",
            "required": false,
            "in": "query",
            "example": "23cbb6d6-cb11-4330-bdff-7bb791df2e23",
            "description": "UserId of the user which led to the change.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start of search time range.",
            "example": "2021-06-02",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End of search time range.",
            "example": "2021-06-02",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response will be a JSON object and contains a paginated list of custom images audits.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAuditResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Images Audits"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/compute/snapshots/audits": {
      "get": {
        "operationId": "retrieveSnapshotsAuditsList",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl -X GET -H \"Content-Type: application/json\" -H \"Authorization: Bearer ${ACCESS_TOKEN}\" -H \"x-request-id: 04e0f898-37b4-48bc-a794-1a57abe6aa31\" -H  \"x-trace-id: 123213\" \"https://api.contabo.com/v1/compute/snapshots/audits\""
          },
          {
            "lang": "cntb CLI",
            "source": "cntb history snapshots"
          }
        ],
        "summary": "List history about your snapshots (audit) triggered via the API",
        "description": "List and filters the history about your snapshots your triggered via the API.",
        "parameters": [
          {
            "name": "x-request-id",
            "in": "header",
            "description": "[Uuid4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) to identify individual requests for support cases. You can use [uuidgenerator](https://www.uuidgenerator.net/version4) to generate them manually.",
            "required": true,
            "schema": {
              "example": "04e0f898-37b4-48bc-a794-1a57abe6aa31",
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-5][0-9A-Fa-f]{3}-[089abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            }
          },
          {
            "name": "x-trace-id",
            "in": "header",
            "description": "Identifier to trace group of requests.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Number of page to be fetched.",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of elements per page.",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "example": "name:asc",
            "description": "Specify fields and ordering (ASC for ascending, DESC for descending) in following format `field:ASC|DESC`.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "instanceId",
            "required": false,
            "in": "query",
            "example": 12345,
            "description": "The identifier of the instance",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "snapshotId",
            "required": false,
            "in": "query",
            "description": "The identifier of the snapshot",
            "example": "snap1628603855",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "required": false,
            "in": "query",
            "example": "D5FD9FAF-58C0-4406-8F46-F449B8E4FEC3",
            "description": "The requestId of the API call which led to the change",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changedBy",
            "required": false,
            "in": "query",
            "example": "23cbb6d6-cb11-4330-bdff-7bb791df2e23",
            "description": "changedBy of the user which led to the change",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start of search time range.",
            "example": "2021-06-02",
            "schema": {
              "format": "date",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End of search time range.",
            "example": "2021-06-02",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response will be a JSON object and contains a paginated list of snapshots audits triggered via the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSnapshotsAuditResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Snapshots Audits"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "The Contabo API requires a so called `access_token` which has to be provided in the HTTP request `Authorization` header. The special type is called `Bearer`.\n\nThus the header would look like `Authorization: Bearer <access_token>`\n\nIn order to get an `access_token` you need to invoke Contabo's OAuth2 provider with the credentials you get from the [Customer Control Panel](https://my.contabo.com).\nYou will get a response containing an `access_token`.\n\nHere is how to do it:\n\n```sh\nCLIENT_ID=<ClientId from Customer Control Panel>\nCLIENT_SECRET=<ClientSecret from Customer Control Panel>\nAPI_USER=<API User from Customer Control Panel>\nAPI_PASSWORD='<API Password from Customer Control Panel>'\ncurl -d \"client_id=$CLIENT_ID\" -d \"client_secret=$CLIENT_SECRET\" --data-urlencode \"username=$API_USER\" --data-urlencode \"password=$API_PASSWORD\" -d 'grant_type=password' 'https://auth.contabo.com/auth/realms/contabo/protocol/openid-connect/token'\n\n```\n\nThe response would be a complete token with an `access_token`. Please extract it and use it in your HTTP request `Authorization` header. The documentation will show you some examples by using\nthe command line. Please note that you can use the `cntb` CLI tool to facilitate invocation.\n"
      }
    },
    "schemas": {
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number",
            "example": 10,
            "description": "Number of elements per page."
          },
          "totalElements": {
            "type": "number",
            "example": 100,
            "description": "Number of overall matched elements."
          },
          "totalPages": {
            "type": "number",
            "example": 10,
            "description": "Overall number of pages."
          },
          "page": {
            "type": "number",
            "example": 1,
            "description": "Current number of page."
          }
        },
        "required": [
          "size",
          "totalElements",
          "totalPages",
          "page"
        ]
      },
      "ResourcePermissionsResponse": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "integer",
            "format": "int64",
            "description": "Tag's id",
            "example": "12345"
          },
          "tagName": {
            "type": "string",
            "description": "Tag name. The resriction is based on the resources which have been assigned to that tag. If no resource has been assigned to the given tag, no access will be possible.",
            "example": "Web"
          }
        },
        "required": [
          "tagId",
          "tagName"
        ]
      },
      "PermissionResponse": {
        "type": "object",
        "properties": {
          "apiName": {
            "type": "string",
            "description": "API endpoint. In order to get a list availbale api enpoints please refer to the GET api-permissions endpoint.",
            "example": "/v1/compute/instances"
          },
          "actions": {
            "type": "array",
            "description": "Action allowed for the API endpoint. Basically `CREATE` corresponds to POST endpoints, `READ` to GET endpoints, `UPDATE` to PATCH / PUT endpoints and `DELETE` to DELETE endpoints.",
            "items": {
              "type": "string",
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE"
              ]
            },
            "example": [
              "CREATE",
              "READ"
            ]
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourcePermissionsResponse"
            }
          }
        },
        "required": [
          "apiName",
          "actions"
        ]
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "Role's id"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "name": {
            "type": "string",
            "description": "Role's name",
            "example": "infrastructure"
          },
          "admin": {
            "type": "boolean",
            "description": "Admin",
            "example": "true"
          },
          "accessAllResources": {
            "type": "boolean",
            "description": "Access All Resources",
            "example": "true"
          },
          "type": {
            "type": "string",
            "description": "Role type can be either `default` or `custom`. The `default` roles cannot be modified or deleted.",
            "example": "custom"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            }
          }
        },
        "required": [
          "roleId",
          "tenantId",
          "customerId",
          "name",
          "admin",
          "accessAllResources",
          "type"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "userId": {
            "type": "string",
            "description": "The identifier of the user.",
            "example": "6cdf5968-f9fe-4192-97c2-f349e813c5e8"
          },
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "John",
            "description": "The first name of the user. Users may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per user."
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Doe",
            "description": "The last name of the user. Users may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per user."
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "john.doe@example.com",
            "description": "The email of the user to which activation and forgot password links are being sent to. There is a limit of 255 characters per email."
          },
          "emailVerified": {
            "type": "boolean",
            "example": false,
            "description": "User email verification status."
          },
          "enabled": {
            "type": "boolean",
            "example": false,
            "description": "If uses is not enabled, he can't login and thus use services any longer."
          },
          "totp": {
            "type": "boolean",
            "example": false,
            "description": "Enable or disable two-factor authentication (2FA) via time based OTP."
          },
          "locale": {
            "type": "string",
            "example": "de",
            "description": "The locale of the user. This can be `de-DE`, `de`, `en-US`, `en`",
            "enum": [
              "de-DE",
              "de",
              "en-US",
              "en"
            ]
          },
          "roles": {
            "description": "The roles as list of `roleId`s of the user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            }
          },
          "owner": {
            "type": "boolean",
            "example": false,
            "description": "If user is owner he will have permissions to all API endpoints and resources. Enabling this will superseed all role definitions and `accessAllResources`."
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "userId",
          "firstName",
          "lastName",
          "email",
          "emailVerified",
          "enabled",
          "totp",
          "locale",
          "roles",
          "owner"
        ]
      },
      "Links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "Link to current resource."
          },
          "first": {
            "type": "string",
            "description": "Link to first page, if applicable."
          },
          "previous": {
            "type": "string",
            "description": "Link to previous page, if applicable."
          },
          "next": {
            "type": "string",
            "description": "Link to next page, if applicable."
          },
          "last": {
            "type": "string",
            "description": "Link to last page, if applicable."
          }
        },
        "required": [
          "self",
          "first",
          "last"
        ]
      },
      "ListUserResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/users?page=1",
              "next": "/v1/users?page=19",
              "self": "/v1/users/12345",
              "previous": "/v1/users?page=21",
              "last": "/v1/users?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "John",
            "description": "The name of the user. Names may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per user."
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Doe",
            "description": "The last name of the user. Users may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per user."
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "john.doe@example.com",
            "description": "The email of the user to which activation and forgot password links are being sent to. There is a limit of 255 characters per email."
          },
          "enabled": {
            "type": "boolean",
            "example": false,
            "description": "If user is not enabled, he can't login and thus use services any longer."
          },
          "totp": {
            "type": "boolean",
            "example": false,
            "description": "Enable or disable two-factor authentication (2FA) via time based OTP."
          },
          "locale": {
            "type": "string",
            "example": "de",
            "description": "The locale of the user. This can be `de-DE`, `de`, `en-US`, `en`",
            "enum": [
              "de-DE",
              "de",
              "en-US",
              "en"
            ]
          },
          "roles": {
            "type": "array",
            "example": [
              1,
              2,
              3,
              4
            ],
            "description": "The roles as list of `roleId`s of the user.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "required": [
          "email",
          "enabled",
          "totp",
          "locale"
        ]
      },
      "CreateUserResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "6cdf5968-f9fe-4192-97c2-f349e813c5e8"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "userId"
        ]
      },
      "SelfLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "Link to current resource."
          }
        },
        "required": [
          "self"
        ]
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateUserResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/users/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FindUserResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/users/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "John",
            "description": "The name of the user. Names may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per user."
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Doe",
            "description": "The last name of the user. Users may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per user."
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "john.doe@example.com",
            "description": "The email of the user to which activation and forgot password links are being sent to. There is a limit of 255 characters per email."
          },
          "enabled": {
            "type": "boolean",
            "example": false,
            "description": "If user is not enabled, he can't login and thus use services any longer."
          },
          "totp": {
            "type": "boolean",
            "example": false,
            "description": "Enable or disable two-factor authentication (2FA) via time based OTP."
          },
          "locale": {
            "type": "string",
            "example": "de",
            "description": "The locale of the user. This can be `de-DE`, `de`, `en-US`, `en`",
            "enum": [
              "de-DE",
              "de",
              "en-US",
              "en"
            ]
          },
          "roles": {
            "type": "array",
            "example": [
              1,
              2,
              3,
              4
            ],
            "description": "The roles as list of `roleId`s of the user.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/users/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "id": {
            "type": "string",
            "description": "Client's id",
            "example": "6cdf5968-f9fe-4192-97c2-f349e813c5e8"
          },
          "clientId": {
            "type": "string",
            "example": "DE-54321",
            "description": "IDM client id"
          },
          "secret": {
            "type": "string",
            "example": "7271e905-239e-4d15-a8c5-527743a58390",
            "description": "IDM client secret"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "id",
          "clientId",
          "secret"
        ]
      },
      "FindClientResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/users/client"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "ClientSecretResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "secret": {
            "type": "string",
            "example": "7271e905-239e-4d15-a8c5-527743a58390",
            "description": "IDM client secret"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "secret"
        ]
      },
      "GenerateClientSecretResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientSecretResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/users/client/secret"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UserIsPasswordSetResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "isPasswordSet": {
            "type": "boolean",
            "description": "Indicates if the user has set a password for his account",
            "example": false
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "isPasswordSet"
        ]
      },
      "FindUserIsPasswordSetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserIsPasswordSetResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/users/is-password-set"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "ListRoleResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/role/{roleType}/?page=1",
              "next": "/v1/role/{roleType}/?page=19",
              "self": "/v1/role/{roleType}/12345",
              "previous": "/v1/role/{roleType}/?page=21",
              "last": "/v1/role/{roleType}?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "PermissionRequest": {
        "type": "object",
        "properties": {
          "apiName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "infrastructure",
            "description": "The name of the role. There is a limit of 255 characters per role."
          },
          "actions": {
            "type": "array",
            "description": "Action allowed for the API endpoint. Basically `CREATE` corresponds to POST endpoints, `READ` to GET endpoints, `UPDATE` to PATCH / PUT endpoints and `DELETE` to DELETE endpoints.",
            "items": {
              "type": "string",
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE"
              ]
            },
            "example": [
              "CREATE",
              "READ"
            ]
          },
          "resources": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "example": [
              1,
              2,
              3
            ],
            "description": "The IDs of tags. Only if those tags are assgined to a resource the user with that role will be able to access the resource."
          }
        },
        "required": [
          "apiName",
          "actions"
        ]
      },
      "CreateRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "infrastructure",
            "description": "The name of the role. There is a limit of 255 characters per role."
          },
          "admin": {
            "type": "boolean",
            "example": false,
            "description": "If user is admin he will have permissions to all API endpoints and resources. Enabling this will superseed all role definitions and `accessAllResources`."
          },
          "accessAllResources": {
            "type": "boolean",
            "example": false,
            "description": "Allow access to all resources. This will superseed all assigned resources in a role."
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionRequest"
            }
          }
        },
        "required": [
          "name",
          "admin",
          "accessAllResources"
        ]
      },
      "CreateRoleResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "roleId": {
            "type": "integer",
            "format": "int64",
            "description": "Role's id",
            "example": 12345
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "roleId"
        ]
      },
      "CreateRoleResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRoleResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/roles/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FindRoleResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/roles/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UpdateRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "infrastructure",
            "description": "The name of the role. There is a limit of 255 characters per role."
          },
          "admin": {
            "type": "boolean",
            "example": false,
            "description": "If user is admin he will have permissions to all API endpoints and resources. Enabling this will superseed all role definitions and `accessAllResources`."
          },
          "accessAllResources": {
            "type": "boolean",
            "example": false,
            "description": "Allow access to all resources. This will superseed all assigned resources in a role."
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionRequest"
            }
          }
        },
        "required": [
          "name",
          "admin",
          "accessAllResources"
        ]
      },
      "UpdateRoleResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/roles/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "ApiPermissionsResponse": {
        "type": "object",
        "properties": {
          "apiName": {
            "type": "string",
            "description": "API endpoint. In order to get a list availbale api enpoints please refer to the GET api-permissions endpoint.",
            "example": "/v1/compute/instances"
          },
          "actions": {
            "type": "array",
            "description": "Action allowed for the API endpoint. Basically `CREATE` corresponds to POST endpoints, `READ` to GET endpoints, `UPDATE` to PATCH / PUT endpoints and `DELETE` to DELETE endpoints.",
            "items": {
              "type": "string",
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE"
              ]
            },
            "example": [
              "CREATE",
              "READ"
            ]
          }
        },
        "required": [
          "apiName",
          "actions"
        ]
      },
      "ListApiPermissionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiPermissionsResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/roles/api-permissions?page=1",
              "previous": "/v1/roles/api-permissions?page=2",
              "next": "/v1/roles/api-permissions?page=3",
              "last": "/v1/roles/api-permissions?page=10",
              "self": "/v1/roles/api-permissions"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "CredentialData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "accessKey": {
            "type": "string",
            "example": "AKIAIOSFODNN7EXAMPLE",
            "description": "Access key ID."
          },
          "secretKey": {
            "type": "string",
            "description": "Secret key ID.",
            "example": "wJalrXK7MDENGbPxRfiCYEXAMPLEKEY"
          },
          "objectStorageId": {
            "type": "string",
            "description": "Object Storage ID.",
            "example": "9a4c7e20-c326-4a8c-900c-687ad83ba170Y"
          },
          "displayName": {
            "type": "string",
            "description": "Object Storage Name.",
            "example": "Object Storage Test"
          },
          "region": {
            "type": "string",
            "description": "Object Storage Region.",
            "example": "European Union"
          },
          "credentialId": {
            "type": "number",
            "description": "Object Storage Credential ID",
            "example": 12345
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "accessKey",
          "secretKey",
          "objectStorageId",
          "displayName",
          "region",
          "credentialId"
        ]
      },
      "ListCredentialResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialData"
            }
          },
          "_links": {
            "example": {
              "first": "v1/users/08a92037-01e8-4dff-8565-47cad7be701a/object-storages/credentials?page=1",
              "next": "v1/users/08a92037-01e8-4dff-8565-47cad7be701a/object-storages/credentials?page=19",
              "self": "v1/users/08a92037-01e8-4dff-8565-47cad7be701a/object-storages/credentials/12345",
              "previous": "v1/users/08a92037-01e8-4dff-8565-47cad7be701a/object-storages/credentials?page=21",
              "last": "v1/users/08a92037-01e8-4dff-8565-47cad7be701a/object-storages/credentials?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "FindCredentialResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialData"
            }
          },
          "_links": {
            "example": {
              "self": "v1/users/08a92037-01e8-4dff-8565-47cad7be701a/object-storages/e3f0207c-f7fe-433a-92ab-39a9e976642d/credentials"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UserAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "The identifier of the audit entry."
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer number",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User ID",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John.Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "userId": {
            "type": "string",
            "example": "6cdf5968-f9fe-4192-97c2-f349e813c5e8",
            "description": "The identifier of the user"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId",
          "userId"
        ]
      },
      "ListUserAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/users/audits?page=2",
              "previous": "/v1/users/audits?page=2",
              "next": "/v1/users/audits?page=3",
              "last": "/v1/users/audits?page=10",
              "self": "/v1/users/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "RoleAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "The identifier of the audit entry."
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer number",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User ID",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John.Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "roleId": {
            "type": "number",
            "minimum": 0,
            "example": "12345",
            "description": "The identifier of the role"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId",
          "roleId"
        ]
      },
      "ListRoleAuditResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/roles/audits?page=2",
              "previous": "/v1/roles/audits?page=2",
              "next": "/v1/roles/audits?page=3",
              "last": "/v1/roles/audits?page=10",
              "self": "/v1/roles/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "AutoScalingTypeResponse": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "State of the autoscaling for the current object storage.",
            "example": "enabled",
            "enum": [
              "enabled",
              "disabled",
              "error"
            ]
          },
          "sizeLimitTB": {
            "type": "number",
            "format": "double",
            "description": "Autoscaling size limit for the current object storage.",
            "example": 1
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": [
          "state",
          "sizeLimitTB"
        ]
      },
      "ObjectStorageResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "objectStorageId": {
            "type": "string",
            "minLength": 1,
            "description": "Your object storage id",
            "example": "b943b25a-c8b5-4570-9135-4bbaa7615b81"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date for object storage.",
            "example": "2021-06-02T12:32:03.363Z"
          },
          "cancelDate": {
            "type": "string",
            "format": "date",
            "description": "Cancellation date for object storage.",
            "example": "2021-06-02"
          },
          "autoScaling": {
            "description": "Autoscaling settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingTypeResponse"
              }
            ]
          },
          "dataCenter": {
            "type": "string",
            "minLength": 1,
            "description": "Data center your object storage is located",
            "example": "EU"
          },
          "totalPurchasedSpaceTB": {
            "type": "number",
            "format": "double",
            "description": "Amount of purchased / requested object storage in TB.",
            "example": 6.25
          },
          "s3Url": {
            "type": "string",
            "description": "S3 URL to connect to your S3 compatible object storage",
            "example": "eu1-s3.contabo.com"
          },
          "s3TenantId": {
            "type": "string",
            "description": "Your S3 tenantId. Only required for public sharing.",
            "example": "2cd2e5e1444a41b0bed16c6410ecaa84"
          },
          "status": {
            "type": "string",
            "description": "The object storage status",
            "example": "READY",
            "enum": [
              "READY",
              "PROVISIONING",
              "UPGRADING",
              "CANCELLED",
              "ERROR",
              "ENABLED",
              "DISABLED",
              "MANUAL_PROVISIONING",
              "PRODUCT_NOT_AVAILABLE",
              "LIMIT_EXCEEDED",
              "VERIFICATION_REQUIRED",
              "COMPLETED",
              "ORDER_PROCESSING",
              "PENDING_PAYMENT",
              "UNKNOWN"
            ]
          },
          "region": {
            "type": "string",
            "description": "The region where your object storage is located",
            "example": "European Union"
          },
          "displayName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Display name for object storage.",
            "example": "Object storage 1"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "objectStorageId",
          "createdDate",
          "cancelDate",
          "autoScaling",
          "dataCenter",
          "totalPurchasedSpaceTB",
          "s3Url",
          "s3TenantId",
          "status",
          "region",
          "displayName"
        ]
      },
      "ListObjectStorageResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectStorageResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/object-storages?size=10",
              "previous": "/v1/object-storages?page=1&size=10",
              "next": "/v1/object-storages?page=3&size=10",
              "last": "/v1/object-storages?page=5&size=10",
              "self": "/v1/object-storages"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "DataCenterResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Name of the data center",
            "example": "European Union 1"
          },
          "slug": {
            "type": "string",
            "minLength": 1,
            "description": "Slug of the data center",
            "example": "EU1"
          },
          "capabilities": {
            "type": "array",
            "example": [
              "VPS",
              "Object-Storage"
            ],
            "items": {
              "type": "string",
              "enum": [
                "VPS",
                "VDS",
                "Object-Storage",
                "Private-Networking"
              ]
            }
          },
          "s3Url": {
            "type": "string",
            "minLength": 1,
            "description": "S3 URL of the data center",
            "example": "eu1-s3.contabo.com"
          },
          "regionName": {
            "type": "string",
            "minLength": 1,
            "description": "Name of the region",
            "example": "European Union"
          },
          "regionSlug": {
            "type": "string",
            "minLength": 1,
            "description": "Slug of the region",
            "example": "EU"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          }
        },
        "required": [
          "name",
          "slug",
          "capabilities",
          "s3Url",
          "regionName",
          "regionSlug",
          "tenantId",
          "customerId"
        ]
      },
      "ListDataCenterResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataCenterResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/data-centers?page=1",
              "previous": "/v1/data-centers?page=19",
              "self": "/v1/data-centers/12345",
              "next": "/v1/data-centers?page=21",
              "last": "/v1/data-centers?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "AutoScalingTypeRequest": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "State of the autoscaling for the current object storage.",
            "example": "enabled",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "sizeLimitTB": {
            "type": "number",
            "format": "double",
            "description": "Autoscaling size limit for the current object storage.",
            "example": 1
          }
        },
        "required": [
          "state",
          "sizeLimitTB"
        ]
      },
      "CreateObjectStorageRequest": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "minLength": 1,
            "description": "Region where the object storage should be located. Default is EU. Available regions: EU, US-central, SIN",
            "example": "EU",
            "default": "EU"
          },
          "autoScaling": {
            "description": "Autoscaling settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingTypeRequest"
              }
            ]
          },
          "totalPurchasedSpaceTB": {
            "type": "number",
            "format": "double",
            "description": "Amount of purchased / requested object storage in TB.",
            "example": 6,
            "default": "0.25"
          },
          "displayName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Display name helps to differentiate between object storages, especially if they are in the same region. If display name is not provided, it will be generated. Display name can be changed any time.",
            "example": "Object storage 1"
          }
        },
        "required": [
          "region",
          "totalPurchasedSpaceTB"
        ]
      },
      "CreateObjectStorageResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "objectStorageId": {
            "type": "string",
            "minLength": 1,
            "description": "Your object storage id",
            "example": "b943b25a-c8b5-4570-9135-4bbaa7615b81"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date for object storage.",
            "example": "2021-06-02T12:32:03.363Z"
          },
          "cancelDate": {
            "type": "string",
            "format": "date",
            "description": "Cancellation date for object storage.",
            "example": "2021-06-02"
          },
          "autoScaling": {
            "description": "Autoscaling settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingTypeResponse"
              }
            ]
          },
          "dataCenter": {
            "type": "string",
            "minLength": 1,
            "description": "The data center of the storage",
            "example": "EU"
          },
          "totalPurchasedSpaceTB": {
            "type": "number",
            "format": "double",
            "description": "Amount of purchased / requested object storage in TB.",
            "example": 6.25
          },
          "usedSpaceTB": {
            "type": "number",
            "format": "double",
            "description": "Currently used space in TB.",
            "example": 4
          },
          "usedSpacePercentage": {
            "type": "number",
            "format": "double",
            "description": "Currently used space in percentage.",
            "example": "100",
            "minimum": 0,
            "maximum": 100
          },
          "s3Url": {
            "type": "string",
            "example": "eu1-s3.contabo.com",
            "description": "S3 URL to connect to your S3 compatible object storage"
          },
          "s3TenantId": {
            "type": "string",
            "description": "Your S3 tenantId. Only required for public sharing.",
            "example": "2cd2e5e1444a41b0bed16c6410ecaa84"
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "description": "The object storage status",
            "enum": [
              "READY",
              "PROVISIONING",
              "UPGRADING",
              "CANCELLED",
              "ERROR",
              "ENABLED",
              "DISABLED",
              "MANUAL_PROVISIONING",
              "PRODUCT_NOT_AVAILABLE",
              "LIMIT_EXCEEDED",
              "VERIFICATION_REQUIRED",
              "COMPLETED",
              "ORDER_PROCESSING",
              "PENDING_PAYMENT",
              "UNKNOWN"
            ],
            "example": "READY"
          },
          "region": {
            "type": "string",
            "description": "The region where your object storage is located",
            "example": "European Union"
          },
          "displayName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Display name for object storage.",
            "example": "Object storage 1"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "objectStorageId",
          "createdDate",
          "cancelDate",
          "autoScaling",
          "dataCenter",
          "totalPurchasedSpaceTB",
          "usedSpaceTB",
          "usedSpacePercentage",
          "s3Url",
          "s3TenantId",
          "status",
          "region",
          "displayName"
        ]
      },
      "CreateObjectStorageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateObjectStorageResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/object-storages/8cd3f2ba-65a7-4279-bb54-0fea88dc8860"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FindObjectStorageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectStorageResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/object-storages/8cd3f2ba-65a7-4279-bb54-0fea88dc8860"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UpgradeAutoScalingType": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "State of the autoscaling for the current object storage.",
            "example": "enabled",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "sizeLimitTB": {
            "type": "number",
            "format": "double",
            "description": "Autoscaling size limit for the current object storage.",
            "example": 6
          }
        }
      },
      "UpgradeObjectStorageRequest": {
        "type": "object",
        "properties": {
          "autoScaling": {
            "description": "New monthly object storage size limit for autoscaling if enabled.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpgradeAutoScalingType"
              }
            ]
          },
          "totalPurchasedSpaceTB": {
            "type": "number",
            "format": "double",
            "description": "New total object storage limit. If this number is larger than before you will also be billed for the added storage space. No downgrade possible.",
            "example": 8
          }
        }
      },
      "UpgradeObjectStorageResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "objectStorageId": {
            "type": "string",
            "minLength": 1,
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Object storage id"
          },
          "createdDate": {
            "type": "string",
            "description": "Creation date for object storage.",
            "example": "2021-06-02T12:32:03.363Z"
          },
          "dataCenter": {
            "type": "string",
            "example": "EU",
            "description": "Data center of the object storage."
          },
          "autoScaling": {
            "description": "The autoscaling limit of the object storage.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingTypeResponse"
              }
            ]
          },
          "s3Url": {
            "type": "string",
            "example": "eu1-s3.contabo.com",
            "description": "S3 URL to connect to your S3 compatible object storage"
          },
          "status": {
            "type": "string",
            "description": "The object storage status",
            "example": "READY",
            "enum": [
              "READY",
              "PROVISIONING",
              "UPGRADING",
              "CANCELLED",
              "ERROR",
              "ENABLED",
              "DISABLED",
              "MANUAL_PROVISIONING",
              "PRODUCT_NOT_AVAILABLE",
              "LIMIT_EXCEEDED",
              "VERIFICATION_REQUIRED",
              "COMPLETED",
              "ORDER_PROCESSING",
              "PENDING_PAYMENT",
              "UNKNOWN"
            ]
          },
          "totalPurchasedSpaceTB": {
            "type": "number",
            "format": "double",
            "description": "Total purchased object storage space in TB.",
            "example": 6
          },
          "region": {
            "type": "string",
            "description": "The region where your object storage is located",
            "example": "European Union"
          },
          "displayName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Display name for object storage.",
            "example": "Object storage 1"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "objectStorageId",
          "createdDate",
          "dataCenter",
          "autoScaling",
          "s3Url",
          "status",
          "totalPurchasedSpaceTB",
          "region",
          "displayName"
        ]
      },
      "UpgradeObjectStorageResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "example": {
              "self": "/v1/object-storages/9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpgradeObjectStorageResponseData"
            }
          }
        },
        "required": [
          "_links",
          "data"
        ]
      },
      "ObjectStoragesStatsResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "usedSpaceTB": {
            "type": "number",
            "format": "double",
            "description": "Currently used space in TB.",
            "example": 4
          },
          "usedSpacePercentage": {
            "type": "number",
            "format": "double",
            "description": "Currently used space in percentage.",
            "example": "100",
            "minimum": 0,
            "maximum": 100
          },
          "numberOfObjects": {
            "type": "integer",
            "format": "int64",
            "description": "Number of all objects (i.e. files and folders) in object storage.",
            "example": 2
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "usedSpaceTB",
          "usedSpacePercentage",
          "numberOfObjects"
        ]
      },
      "ObjectStoragesStatsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectStoragesStatsResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/object-storages/stats/8cd3f2ba-65a7-4279-bb54-0fea88dc8860"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "CancelObjectStorageRequest": {
        "type": "object",
        "properties": {}
      },
      "CancelObjectStorageResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "objectStorageId": {
            "type": "string",
            "description": "Object Storage id"
          },
          "cancelDate": {
            "type": "string",
            "format": "date",
            "description": "Cancellation date for object storage.",
            "example": "2021-06-02"
          },
          "displayName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Display name for object storage.",
            "example": "Object storage 1"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "objectStorageId",
          "cancelDate",
          "displayName"
        ]
      },
      "CancelObjectStorageResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "example": {
              "self": "/v1/object-storages/9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelObjectStorageResponseData"
            }
          }
        },
        "required": [
          "_links",
          "data"
        ]
      },
      "PatchObjectStorageRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Display name helps to differentiate between object storages, especially if they are in the same region.",
            "example": "Object storage 1"
          }
        },
        "required": [
          "displayName"
        ]
      },
      "CreateTicketRequest": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "minLength": 1,
            "description": "The ticket subject",
            "example": "Subject"
          },
          "note": {
            "type": "string",
            "minLength": 1,
            "description": "The ticket note",
            "example": "Note"
          },
          "sender": {
            "type": "string",
            "minLength": 1,
            "description": "Customer email",
            "example": "your@mail.com"
          }
        },
        "required": [
          "subject",
          "note",
          "sender"
        ]
      },
      "CreateTicketResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          }
        },
        "required": [
          "tenantId",
          "customerId"
        ]
      },
      "CreateTicketResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTicketResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/create-ticket"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "ObjectStorageAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "The identifier of the audit entry."
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer number",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User ID",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John.Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "objectStorageId": {
            "type": "string",
            "example": "6cdf5968-f9fe-4192-97c2-f349e813c5e8",
            "description": "Object Storage Id"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId",
          "objectStorageId"
        ]
      },
      "ListObjectStorageAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectStorageAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/object-storages/audits?page=2",
              "previous": "/v1/object-storages/audits?page=2",
              "next": "/v1/object-storages/audits?page=3",
              "last": "/v1/object-storages/audits?page=10",
              "self": "/v1/object-storages/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "IpV4": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "description": "IP address",
            "example": "195.123.123.1"
          },
          "gateway": {
            "type": "string",
            "description": "Gateway",
            "example": "255.255.255.1"
          },
          "netmaskCidr": {
            "type": "integer",
            "format": "int64",
            "description": "Netmask CIDR",
            "example": 24
          },
          "broadcast": {
            "type": "string",
            "description": "Broadcast address",
            "example": "195.123.123.255"
          },
          "net": {
            "type": "string",
            "description": "Net address",
            "example": "195.123.123.0/24"
          }
        },
        "required": [
          "ip",
          "gateway",
          "netmaskCidr",
          "broadcast",
          "net"
        ]
      },
      "ListVipResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Tenant Id.",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer's Id.",
            "example": "1234"
          },
          "vipId": {
            "type": "string",
            "description": "Vip uuid.",
            "example": "a846c6cc-731c-45dc-b653-bc8232e88d9c"
          },
          "dataCenter": {
            "type": "string",
            "description": "data center.",
            "example": "European Union (Germany) 3"
          },
          "region": {
            "type": "string",
            "description": "Region",
            "example": "European Union (Germany)"
          },
          "resourceId": {
            "type": "string",
            "description": "Resource Id.",
            "example": "101234"
          },
          "resourceType": {
            "type": "string",
            "description": "The resourceType using the VIP.",
            "enum": [
              "instances",
              "bare-metal",
              "null"
            ],
            "example": "instances"
          },
          "resourceName": {
            "type": "string",
            "description": "Resource name.",
            "example": "vmi100101"
          },
          "resourceDisplayName": {
            "type": "string",
            "description": "Resource display name.",
            "example": "My Instance 12"
          },
          "ipVersion": {
            "type": "string",
            "description": "Version of Ip.",
            "enum": [
              "v4"
            ]
          },
          "type": {
            "type": "string",
            "description": "The VIP type.",
            "enum": [
              "additional",
              "floating"
            ],
            "example": "additional"
          },
          "v4": {
            "$ref": "#/components/schemas/IpV4"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "vipId",
          "dataCenter",
          "region",
          "resourceId",
          "resourceName",
          "resourceDisplayName",
          "ipVersion"
        ]
      },
      "ListVipResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListVipResponseData"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/vips?page=1",
              "previous": "/v1/vips?page=19",
              "self": "/v1/vips?page=20",
              "next": "/v1/vips?page=21",
              "last": "/v1/vips?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "VipResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Tenant Id.",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer's Id.",
            "example": "1234"
          },
          "vipId": {
            "type": "string",
            "description": "Vip uuid.",
            "example": "a846c6cc-731c-45dc-b653-bc8232e88d9c"
          },
          "dataCenter": {
            "type": "string",
            "description": "data center.",
            "example": "European Union (Germany) 3"
          },
          "region": {
            "type": "string",
            "description": "Region",
            "example": "European Union (Germany)"
          },
          "resourceId": {
            "type": "string",
            "description": "Resource Id.",
            "example": "101234"
          },
          "resourceType": {
            "type": "string",
            "description": "The resourceType using the VIP.",
            "enum": [
              "instances",
              "bare-metal",
              "null"
            ],
            "example": "instances"
          },
          "resourceName": {
            "type": "string",
            "description": "Resource name.",
            "example": "vmi100101"
          },
          "resourceDisplayName": {
            "type": "string",
            "description": "Resource display name.",
            "example": "My Instance 12"
          },
          "ipVersion": {
            "type": "string",
            "description": "Version of Ip.",
            "enum": [
              "v4"
            ]
          },
          "type": {
            "type": "string",
            "description": "The VIP type.",
            "enum": [
              "additional",
              "floating"
            ],
            "example": "additional"
          },
          "v4": {
            "$ref": "#/components/schemas/IpV4"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "vipId",
          "dataCenter",
          "region",
          "resourceId",
          "resourceName",
          "resourceDisplayName",
          "ipVersion"
        ]
      },
      "FindVipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VipResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/vips/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "AssignVipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VipResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/vips/1.2.2.4/instances/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "VipAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The identifier of the audit entry.",
            "example": "12345"
          },
          "vipId": {
            "type": "string",
            "description": "The identifier of the VIP",
            "example": "b943b25a-c8b5-4570-9135-4bbaa7615b81"
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "DELETED",
              "UPDATED"
            ],
            "description": "Type of the action.",
            "example": "CREATED"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer number",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User id",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "User name which did the change.",
            "example": "John Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "vipId",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId"
        ]
      },
      "ListVipAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VipAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/vips/audits?page=2",
              "previous": "/v1/vips/audits?page=2",
              "next": "/v1/vips/audits?page=3",
              "last": "/v1/vips/audits?page=10",
              "self": "/v1/vips/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "TagResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "tagId": {
            "type": "integer",
            "example": "12345",
            "description": "Tag's id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Tag's name",
            "example": "Web-Server"
          },
          "color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "description": "Tag's color",
            "example": "#0A78C3"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "tagId",
          "name",
          "color"
        ]
      },
      "ListTagResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/tags?page=1",
              "previous": "/v1/tags?page=19",
              "self": "/v1/tags/12345",
              "next": "/v1/tags?page=21",
              "last": "/v1/tags?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "CreateTagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Web-Server",
            "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag."
          },
          "color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "default": "#0A78C3",
            "example": "#0A78C3",
            "description": "The color of the tag. Color can be specified using hexadecimal value. Default color is #0A78C3"
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "CreateTagResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "tagId": {
            "type": "integer",
            "description": "Tag's id",
            "example": 12345,
            "format": "int64"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "tagId"
        ]
      },
      "CreateTagResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTagResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/tags/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FindTagResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/tags/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UpdateTagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag.",
            "example": "Updated-Web-Server"
          },
          "color": {
            "type": "string",
            "minLength": 4,
            "maxLength": 7,
            "description": "The color of the tag. Color can be specified using hexadecimal value. Default color is #0A78C3",
            "example": "#0A78C3"
          }
        }
      },
      "UpdateTagResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/tags/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "AssignmentResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "tagId": {
            "type": "integer",
            "format": "int64",
            "description": "The identifier of the tag.",
            "example": "12345"
          },
          "tagName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Tag's name",
            "example": "Web-Server"
          },
          "resourceType": {
            "type": "string",
            "minLength": 1,
            "description": "Resource type. Resource type is one of `instance|image|object-storage`.",
            "example": "instance"
          },
          "resourceId": {
            "type": "string",
            "minLength": 1,
            "description": "Resource id",
            "example": "d65ecf3b-30db-4dc2-9e88-dfc21a14a6bc"
          },
          "resourceName": {
            "type": "string",
            "minLength": 1,
            "description": "Resource name",
            "example": "Instance"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "tagId",
          "tagName",
          "resourceType",
          "resourceId",
          "resourceName"
        ]
      },
      "ListAssignmentResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/tags/12345/assignments?page=1",
              "previous": "/v1/tags/12345/assignments?page=19",
              "self": "/v1/tags/12345/assignments/instance/23456",
              "next": "/v1/tags/12345/assignments?page=21",
              "last": "/v1/tags/12345/assignments?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "TagAssignmentSelfLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "Link to current resource."
          },
          "tag": {
            "type": "string",
            "description": "Link to related tag."
          },
          "_resource": {
            "type": "string",
            "description": "Link to assigned resource"
          }
        },
        "required": [
          "self",
          "tag",
          "_resource"
        ]
      },
      "FindAssignmentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/tags/12345/assignments/instance/23456",
              "tag": "/v1/tags/12345",
              "instance": "/v1/compute/instances/23456"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/TagAssignmentSelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "CreateAssignmentResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/tags/12345/assignments/instance/6549",
              "tag": "/v1/tags/12345",
              "instance": "/v1/compute/instance/6549"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/TagAssignmentSelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "TagAuditResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "id": {
            "type": "number",
            "example": "12345",
            "description": "The identifier of the audit entry."
          },
          "tagId": {
            "type": "integer",
            "minimum": 0,
            "example": "12345",
            "description": "The identifier of the audit entry.",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "DELETED",
              "UPDATED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User ID",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "id",
          "tagId",
          "action",
          "timestamp",
          "changedBy",
          "username",
          "requestId",
          "traceId"
        ]
      },
      "ListTagAuditsResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/tags/audits?page=1",
              "previous": "/v1/tags/audits?page=19",
              "self": "/v1/tags/audits?page=20",
              "next": "/v1/tags/audits?page=21",
              "last": "/v1/tags/audits?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "AssignmentAuditResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "id": {
            "type": "number",
            "example": "12345",
            "description": "The identifier of the audit entry."
          },
          "resourceId": {
            "type": "string",
            "example": "a1b2c3",
            "description": "Resource's id"
          },
          "resourceType": {
            "type": "string",
            "description": "Resource type. Resource type is one of `instance|image|object-storage`.",
            "example": "instance"
          },
          "tagId": {
            "type": "integer",
            "minimum": 0,
            "example": "12345",
            "description": "Tag's id",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "DELETED"
            ],
            "example": "CREATED | DELETED",
            "description": "Audit Action"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Audit creation date"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User ID",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "User Full Name",
            "example": "John Doe"
          },
          "requestId": {
            "type": "string",
            "description": "Request ID",
            "example": "04E0F898-37B4-48BC-A794-1A57ABE6AA31"
          },
          "traceId": {
            "type": "string",
            "description": "Trace ID",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F5"
          },
          "changes": {
            "type": "object",
            "description": "Changes made for a specific Tag"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "id",
          "resourceId",
          "resourceType",
          "tagId",
          "action",
          "timestamp",
          "changedBy",
          "username",
          "requestId",
          "traceId"
        ]
      },
      "ListAssignmentAuditsResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/tags/assignments/audits?page=1",
              "previous": "/v1/tags/assignments/audits?page=19",
              "self": "/v1/tags/assignments/audits?page=20",
              "next": "/v1/tags/assignments/audits?page=21",
              "last": "/v1/tags/assignments/audits?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "IpV41": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "description": "IP Address",
            "example": "192.168.0.1"
          },
          "netmaskCidr": {
            "type": "integer",
            "format": "int32",
            "description": "Netmask CIDR",
            "example": 19
          },
          "gateway": {
            "type": "string",
            "description": "Gateway",
            "example": "1.1.1.1"
          }
        },
        "required": [
          "ip",
          "netmaskCidr",
          "gateway"
        ]
      },
      "PrivateIpConfig": {
        "type": "object",
        "properties": {
          "v4": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IpV41"
            }
          }
        },
        "required": [
          "v4"
        ]
      },
      "IpV6": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "description": "IP Address",
            "example": "1:2:3:4:5:6:7:8"
          },
          "netmaskCidr": {
            "type": "integer",
            "format": "int32",
            "description": "Netmask CIDR",
            "example": 64
          },
          "gateway": {
            "type": "string",
            "description": "Gateway",
            "example": "1:2:3:4:5:6:7:8"
          }
        },
        "required": [
          "ip",
          "netmaskCidr",
          "gateway"
        ]
      },
      "IpConfig": {
        "type": "object",
        "properties": {
          "v4": {
            "$ref": "#/components/schemas/IpV41"
          },
          "v6": {
            "$ref": "#/components/schemas/IpV6"
          }
        },
        "required": [
          "v4",
          "v6"
        ]
      },
      "Instances": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "integer",
            "format": "int64",
            "description": "Instance id",
            "example": 100
          },
          "displayName": {
            "type": "string",
            "description": "Instance display name",
            "example": "Instance"
          },
          "name": {
            "type": "string",
            "description": "Instance name",
            "example": "vmd12345"
          },
          "productId": {
            "type": "string",
            "description": "Product id",
            "example": "V1"
          },
          "privateIpConfig": {
            "$ref": "#/components/schemas/PrivateIpConfig"
          },
          "ipConfig": {
            "$ref": "#/components/schemas/IpConfig"
          },
          "status": {
            "type": "string",
            "description": "State of the instance in the Private Network",
            "example": "ok",
            "enum": [
              "ok",
              "restart",
              "reinstall",
              "reinstallation failed",
              "installing"
            ]
          },
          "errorMessage": {
            "type": "string",
            "description": "Message in case of an error."
          }
        },
        "required": [
          "instanceId",
          "displayName",
          "name",
          "productId",
          "privateIpConfig",
          "ipConfig",
          "status"
        ]
      },
      "ListPrivateNetworkResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "privateNetworkId": {
            "type": "integer",
            "format": "int64",
            "description": "Private Network's id",
            "example": 12345
          },
          "dataCenter": {
            "type": "string",
            "description": "The data center where your Private Network is located",
            "example": "European Union 1"
          },
          "region": {
            "type": "string",
            "description": "The slug of the region where your Private Network is located",
            "example": "EU"
          },
          "regionName": {
            "type": "string",
            "description": "The region where your Private Network is located",
            "example": "European Union"
          },
          "name": {
            "type": "string",
            "description": "The name of the Private Network",
            "example": "myPrivateNetwork"
          },
          "description": {
            "type": "string",
            "description": "The description of the Private Network",
            "example": "myPrivateNetwork Description"
          },
          "cidr": {
            "type": "string",
            "description": "The cidr range of the Private Network",
            "example": "10.0.0.0/22"
          },
          "availableIps": {
            "type": "integer",
            "format": "int64",
            "description": "The total available IPs of the Private Network",
            "example": 1022
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date of the Private Network",
            "example": "2021-06-03T06:27:12.000Z"
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Instances"
            }
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "privateNetworkId",
          "dataCenter",
          "region",
          "regionName",
          "name",
          "description",
          "cidr",
          "availableIps",
          "createdDate",
          "instances"
        ]
      },
      "ListPrivateNetworkResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListPrivateNetworkResponseData"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/private-networks?page=1",
              "previous": "/v1/private-networks?page=19",
              "self": "/v1/private-networks?page=20",
              "next": "/v1/private-networks?page=21",
              "last": "/v1/private-networks?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "CreatePrivateNetworkRequest": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "minLength": 1,
            "description": "Region where the Private Network should be located. Default is `EU`",
            "example": "EU",
            "default": "EU"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per Private Network name.",
            "example": "myPrivateNetwork"
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "example": "myPrivateNetwork Description",
            "description": "The description of the Private Network. There is a limit of 255 characters per Private Network description."
          }
        },
        "required": [
          "name"
        ]
      },
      "PrivateNetworkResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "privateNetworkId": {
            "type": "integer",
            "format": "int64",
            "description": "Private Network's id",
            "example": 12345
          },
          "dataCenter": {
            "type": "string",
            "description": "The data center where your Private Network is located",
            "example": "European Union 1"
          },
          "region": {
            "type": "string",
            "description": "The slug of the region where your Private Network is located",
            "example": "EU"
          },
          "regionName": {
            "type": "string",
            "description": "The region where your Private Network is located",
            "example": "European Union"
          },
          "name": {
            "type": "string",
            "description": "The name of the Private Network",
            "example": "myPrivateNetwork"
          },
          "description": {
            "type": "string",
            "description": "The description of the Private Network",
            "example": "myPrivateNetwork Description"
          },
          "cidr": {
            "type": "string",
            "description": "The cidr range of the Private Network",
            "example": "10.0.0.0/22"
          },
          "availableIps": {
            "type": "integer",
            "format": "int64",
            "description": "The total available IPs of the Private Network",
            "example": 1022
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date of the Private Network",
            "example": "2021-06-03T06:27:12.000Z"
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Instances"
            }
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "privateNetworkId",
          "dataCenter",
          "region",
          "regionName",
          "name",
          "description",
          "cidr",
          "availableIps",
          "createdDate",
          "instances"
        ]
      },
      "CreatePrivateNetworkResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrivateNetworkResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/private-networks/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "PatchPrivateNetworkRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The name of the Private Network. It may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per Private Network.",
            "example": "myPrivateNetwork"
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "example": "myPrivateNetwork Description",
            "description": "The description of the Private Network. There is a limit of 255 characters per Private Network."
          }
        }
      },
      "PatchPrivateNetworkResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrivateNetworkResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/private-networks/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FindPrivateNetworkResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrivateNetworkResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/private-networks/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "InstanceAssignmentSelfLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "Link to current resource."
          },
          "virtualPrivateCloud": {
            "type": "string",
            "description": "Link to related Private Network."
          },
          "instance": {
            "type": "string",
            "description": "Link to assigned instance."
          }
        },
        "required": [
          "self",
          "virtualPrivateCloud",
          "instance"
        ]
      },
      "AssignInstancePrivateNetworkResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/private-networks/12345/instances/100",
              "virtualPrivateCloud": "/v1/private-networks/12345",
              "instance": "/v1/compute/instances/100"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceAssignmentSelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "UnassignInstancePrivateNetworkResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/private-networks/12345/instances/100",
              "virtualPrivateCloud": "/v1/private-networks/12345",
              "instance": "/v1/compute/instances/100"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceAssignmentSelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "PrivateNetworkAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The identifier of the audit entry.",
            "example": "12345"
          },
          "privateNetworkId": {
            "type": "number",
            "minimum": 0,
            "description": "The identifier of the Private Network",
            "example": "12345"
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "DELETED",
              "UPDATED"
            ],
            "description": "Type of the action.",
            "example": "CREATED"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer number",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User id",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "User name which did the change.",
            "example": "John Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "privateNetworkId",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId"
        ]
      },
      "ListPrivateNetworkAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrivateNetworkAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/private-networks/audits?page=2",
              "previous": "/v1/private-networks/audits?page=2",
              "next": "/v1/private-networks/audits?page=3",
              "last": "/v1/private-networks/audits?page=10",
              "self": "/v1/private-networks/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "SecretResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your Customer number",
            "example": "54321"
          },
          "secretId": {
            "type": "number",
            "minimum": 0,
            "example": "12345",
            "description": "Secret's id"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Password Secret",
            "description": "The name assigned to the password/ssh"
          },
          "type": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "description": "The type of the secret. This will be available only when retrieving secrets",
            "example": "password",
            "enum": [
              "password",
              "ssh"
            ]
          },
          "value": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "description": "The value of the secret. This will be available only when retrieving a single secret",
            "example": "password"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date for the secret",
            "example": "2021-06-03T06:27:12.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The last update date for the secret",
            "example": "2021-06-03T06:27:12.000Z"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "secretId",
          "name",
          "type",
          "value",
          "createdAt",
          "updatedAt"
        ]
      },
      "ListSecretResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecretResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/secrets",
              "first": "/v1/secrets?page=1",
              "previous": "/v1/secrets?page=19",
              "next": "/v1/secrets?page=21",
              "last": "/v1/secrets?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "CreateSecretRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "my-password",
            "description": "The name of the secret that will keep the password"
          },
          "value": {
            "type": "string",
            "minLength": 8,
            "example": "PwdA?2092w#",
            "description": "The secret value that needs to be saved. In case of a password it must match a pattern with at least one upper and lower case character and either one number with two special characters `!@#$^&*?_~` or at least three numbers with one special character `!@#$^&*?_~`. This is expressed in the following regular expression: `^((?=.*?[A-Z]{1,})(?=.*?[a-z]{1,}))(((?=(?:[^d]*d){1})(?=([^^&*?_~]*[!@#$^&*?_~]){2,}))|((?=(?:[^d]*d){3})(?=.*?[!@#$^&*?_~]+))).{8,}$`"
          },
          "type": {
            "type": "string",
            "description": "The type of the secret. Can be `password` or `ssh`",
            "example": "password",
            "enum": [
              "password",
              "ssh"
            ]
          }
        },
        "required": [
          "name",
          "value",
          "type"
        ]
      },
      "CreateSecretResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecretResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/secrets/123"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FindSecretResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecretResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/secrets/123"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UpdateSecretRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the secret to be saved"
          },
          "value": {
            "type": "string",
            "minLength": 8,
            "description": "The value of the secret to be saved"
          }
        }
      },
      "UpdateSecretResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/secrets/123"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "SecretAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": "12345",
            "description": "The identifier of the audit entry."
          },
          "secretId": {
            "type": "number",
            "minimum": 0,
            "example": "12345",
            "description": "Secret's id"
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer number",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "User ID",
            "example": "54321"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "secretId",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId"
        ]
      },
      "ListSecretAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecretAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/secrets/audits?page=1",
              "previous": "/v1/secrets/audits?page=19",
              "self": "/v1/secrets/audits?page=20",
              "next": "/v1/secrets/audits?page=21",
              "last": "/v1/secrets/audits?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "InstanceStartActionResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Compute instance / resource id",
            "example": 12345,
            "format": "int64"
          },
          "action": {
            "type": "string",
            "description": "Action that was triggered",
            "example": "start"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "action"
        ]
      },
      "InstanceStartActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceStartActionResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/actions/start"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "InstanceRestartActionResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Compute instance / resource id",
            "example": 12345,
            "format": "int64"
          },
          "action": {
            "type": "string",
            "description": "Action that was triggered",
            "example": "start"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "action"
        ]
      },
      "InstanceRestartActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceRestartActionResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/actions/restart"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "InstanceStopActionResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Compute instance / resource id",
            "example": 12345,
            "format": "int64"
          },
          "action": {
            "type": "string",
            "description": "Action that was triggered",
            "example": "start"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "action"
        ]
      },
      "InstanceStopActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceStopActionResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/actions/stop"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "InstanceShutdownActionResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Compute instance / resource id",
            "example": 12345,
            "format": "int64"
          },
          "action": {
            "type": "string",
            "description": "Action that was triggered",
            "example": "start"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "action"
        ]
      },
      "InstanceShutdownActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceShutdownActionResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/actions/shutdown"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "InstancesActionsRescueRequest": {
        "type": "object",
        "properties": {
          "rootPassword": {
            "type": "integer",
            "format": "int64",
            "description": "`secretId` of the password to login into rescue system for the `root` user.",
            "example": 1
          },
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Array of `secretId`s of public SSH keys for logging into rescue system as `root` user.",
            "example": "[123, 125]"
          },
          "userData": {
            "type": "string",
            "description": "[Cloud-Init](https://cloud-init.io/) Config in order to customize during start of compute instance.",
            "example": "#cloud-config\nuser: root\nssh_pwauth: true\ndisable_root: false\nssh_authorized_keys:\n  - <sshkey>\nchpasswd:\n  list:\n    - root:<password> \n expire: False\n"
          }
        }
      },
      "InstanceRescueActionResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Compute instance / resource id",
            "example": 12345,
            "format": "int64"
          },
          "action": {
            "type": "string",
            "description": "Action that was triggered",
            "example": "start"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "action"
        ]
      },
      "InstanceRescueActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceRescueActionResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/actions/rescue"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "InstancesResetPasswordActionsRequest": {
        "type": "object",
        "properties": {
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Array of `secretId`s of public SSH keys for logging into as `defaultUser` with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management API.",
            "example": "[123, 125]"
          },
          "rootPassword": {
            "type": "integer",
            "format": "int64",
            "description": "`secretId` of the password for the `defaultUser` with administrator/root privileges. For Linux/BSD please use SSH, for Windows RDP. Please refer to Secrets Management API.",
            "example": 1
          },
          "userData": {
            "type": "string",
            "description": "[Cloud-Init](https://cloud-init.io/) Config in order to customize during start of compute instance.",
            "example": "#cloud-config\nuser: root\nssh_pwauth: true\ndisable_root: false\nssh_authorized_keys:\n  - <sshkey>\nchpasswd:\n  list:\n    - root:<password> \n expire: False\n"
          }
        }
      },
      "InstanceResetPasswordActionResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Compute instance / resource id",
            "example": 12345,
            "format": "int64"
          },
          "action": {
            "type": "string",
            "description": "Action that was triggered",
            "example": "start"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "action"
        ]
      },
      "InstanceResetPasswordActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceResetPasswordActionResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/actions/resetPassword"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "IpV42": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "description": "IP Address",
            "example": "192.168.0.1"
          },
          "netmaskCidr": {
            "type": "integer",
            "format": "int32",
            "description": "Netmask CIDR",
            "example": 19
          },
          "gateway": {
            "type": "string",
            "description": "Gateway",
            "example": "1.1.1.1"
          }
        },
        "required": [
          "ip",
          "netmaskCidr",
          "gateway"
        ]
      },
      "AdditionalIp": {
        "type": "object",
        "properties": {
          "v4": {
            "$ref": "#/components/schemas/IpV42"
          }
        },
        "required": [
          "v4"
        ]
      },
      "IpConfig1": {
        "type": "object",
        "properties": {
          "v4": {
            "$ref": "#/components/schemas/IpV42"
          },
          "v6": {
            "$ref": "#/components/schemas/IpV6"
          }
        },
        "required": [
          "v4",
          "v6"
        ]
      },
      "instanceStatus": {
        "type": "string",
        "enum": [
          "provisioning",
          "uninstalled",
          "running",
          "stopped",
          "error",
          "installing",
          "unknown",
          "manual_provisioning",
          "product_not_available",
          "verification_required",
          "rescue",
          "pending_payment",
          "other",
          "reset_password"
        ]
      },
      "AddOnResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the Addon. Please refer to list [here](https://contabo.com/en/product-list/?show_ids=true).",
            "example": 1431
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "The number of Addons you wish to aquire.",
            "example": 4
          }
        },
        "required": [
          "id",
          "quantity"
        ]
      },
      "ListInstancesResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE",
            "enum": [
              "DE",
              "INT"
            ]
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752"
          },
          "additionalIps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalIp"
            }
          },
          "name": {
            "type": "string",
            "description": "Instance Name",
            "example": "vmd12345"
          },
          "displayName": {
            "type": "string",
            "description": "Instance display name",
            "example": "VPS"
          },
          "instanceId": {
            "type": "integer",
            "description": "Instance ID",
            "example": 100,
            "format": "int64"
          },
          "dataCenter": {
            "type": "string",
            "description": "The data center where your Private Network is located",
            "example": "European Union 1"
          },
          "region": {
            "type": "string",
            "description": "Instance region where the compute instance should be located.",
            "example": "EU"
          },
          "regionName": {
            "type": "string",
            "description": "The name of the region where the instance is located.",
            "example": "European Union"
          },
          "productId": {
            "type": "string",
            "description": "Product ID",
            "example": "V5"
          },
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image's id"
          },
          "ipConfig": {
            "$ref": "#/components/schemas/IpConfig1"
          },
          "macAddress": {
            "type": "string",
            "description": "MAC Address",
            "example": "F2:65:50:F3:63:A1"
          },
          "ramMb": {
            "type": "number",
            "description": "Image RAM size in MB",
            "example": "1024"
          },
          "cpuCores": {
            "type": "integer",
            "format": "int64",
            "description": "CPU core count",
            "example": 4
          },
          "osType": {
            "type": "string",
            "description": "Type of operating system (OS)",
            "example": "Linux"
          },
          "diskMb": {
            "type": "number",
            "description": "Image Disk size in MB",
            "example": 2048
          },
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Array of `secretId`s of public SSH keys for logging into as `defaultUser` with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management API.",
            "example": [
              123,
              125
            ]
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date for the instance",
            "example": "2021-06-03T06:27:12.000Z"
          },
          "cancelDate": {
            "type": "string",
            "format": "date",
            "pattern": "yyyy-mm-dd",
            "minLength": 0,
            "maxLength": 10,
            "description": "The date on which the instance will be cancelled",
            "example": "2021-06-03"
          },
          "status": {
            "description": "Instance's status",
            "example": "running",
            "$ref": "#/components/schemas/instanceStatus"
          },
          "vHostId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of host system",
            "example": 73395
          },
          "vHostNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Number of host system",
            "example": 1001
          },
          "vHostName": {
            "type": "string",
            "description": "Name of host system",
            "example": "m1000"
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOnResponse"
            }
          },
          "errorMessage": {
            "type": "string",
            "description": "Message in case of an error."
          },
          "productType": {
            "type": "string",
            "description": "Instance's category depending on Product Id",
            "example": "ssd",
            "enum": [
              "hdd",
              "ssd",
              "vds",
              "nvme"
            ]
          },
          "productName": {
            "type": "string",
            "description": "Instance's Product Name",
            "example": "VPS M"
          },
          "defaultUser": {
            "type": "string",
            "enum": [
              "root",
              "admin",
              "administrator"
            ],
            "description": "Default user name created for login during (re-)installation with administrative privileges. Allowed values for Linux/BSD are `admin` (use sudo to apply administrative privileges like root) or `root`. Allowed values for Windows are `admin` (has administrative privileges like administrator) or `administrator`.",
            "example": "root"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "additionalIps",
          "name",
          "displayName",
          "instanceId",
          "dataCenter",
          "region",
          "regionName",
          "productId",
          "imageId",
          "ipConfig",
          "macAddress",
          "ramMb",
          "cpuCores",
          "osType",
          "diskMb",
          "sshKeys",
          "createdDate",
          "cancelDate",
          "status",
          "vHostId",
          "vHostNumber",
          "vHostName",
          "addOns",
          "productType",
          "productName"
        ]
      },
      "ListInstancesResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListInstancesResponseData"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/instances?page=1",
              "previous": "/v1/compute/instances?page=19",
              "self": "/v1/compute/instances?page=20",
              "next": "/v1/compute/instances?page=21",
              "last": "/v1/compute/instances?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "InstanceResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE",
            "enum": [
              "DE",
              "INT"
            ]
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752"
          },
          "additionalIps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalIp"
            }
          },
          "name": {
            "type": "string",
            "description": "Instance Name",
            "example": "vmd12345"
          },
          "displayName": {
            "type": "string",
            "description": "Instance display name",
            "example": "VPS"
          },
          "instanceId": {
            "type": "integer",
            "description": "Instance ID",
            "example": 100,
            "format": "int64"
          },
          "dataCenter": {
            "type": "string",
            "description": "The data center where your Private Network is located",
            "example": "European Union 1"
          },
          "region": {
            "type": "string",
            "description": "Instance region where the compute instance should be located.",
            "example": "EU"
          },
          "regionName": {
            "type": "string",
            "description": "The name of the region where the instance is located.",
            "example": "European Union"
          },
          "productId": {
            "type": "string",
            "description": "Product ID",
            "example": "V5"
          },
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image's id"
          },
          "ipConfig": {
            "$ref": "#/components/schemas/IpConfig1"
          },
          "macAddress": {
            "type": "string",
            "description": "MAC Address",
            "example": "F2:65:50:F3:63:A1"
          },
          "ramMb": {
            "type": "number",
            "description": "Image RAM size in MB",
            "example": "1024"
          },
          "cpuCores": {
            "type": "integer",
            "format": "int64",
            "description": "CPU core count",
            "example": 4
          },
          "osType": {
            "type": "string",
            "description": "Type of operating system (OS)",
            "example": "Linux"
          },
          "diskMb": {
            "type": "number",
            "description": "Image Disk size in MB",
            "example": 2048
          },
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Array of `secretId`s of public SSH keys for logging into as `defaultUser` with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management API.",
            "example": [
              123,
              125
            ]
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date for the instance",
            "example": "2021-06-03T06:27:12.000Z"
          },
          "cancelDate": {
            "type": "string",
            "format": "date",
            "pattern": "yyyy-mm-dd",
            "minLength": 0,
            "maxLength": 10,
            "description": "The date on which the instance will be cancelled",
            "example": "2021-06-03"
          },
          "status": {
            "description": "Instance's status",
            "example": "running",
            "$ref": "#/components/schemas/instanceStatus"
          },
          "vHostId": {
            "type": "integer",
            "format": "int64",
            "description": "ID of host system",
            "example": 73395
          },
          "vHostNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Number of host system",
            "example": 1001
          },
          "vHostName": {
            "type": "string",
            "description": "Name of host system",
            "example": "m1000"
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOnResponse"
            }
          },
          "errorMessage": {
            "type": "string",
            "description": "Message in case of an error."
          },
          "productType": {
            "type": "string",
            "description": "Instance's category depending on Product Id",
            "example": "ssd",
            "enum": [
              "hdd",
              "ssd",
              "vds",
              "nvme"
            ]
          },
          "productName": {
            "type": "string",
            "description": "Instance's Product Name",
            "example": "VPS M"
          },
          "defaultUser": {
            "type": "string",
            "enum": [
              "root",
              "admin",
              "administrator"
            ],
            "description": "Default user name created for login during (re-)installation with administrative privileges. Allowed values for Linux/BSD are `admin` (use sudo to apply administrative privileges like root) or `root`. Allowed values for Windows are `admin` (has administrative privileges like administrator) or `administrator`.",
            "example": "root"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "additionalIps",
          "name",
          "displayName",
          "instanceId",
          "dataCenter",
          "region",
          "regionName",
          "productId",
          "imageId",
          "ipConfig",
          "macAddress",
          "ramMb",
          "cpuCores",
          "osType",
          "diskMb",
          "sshKeys",
          "createdDate",
          "cancelDate",
          "status",
          "vHostId",
          "vHostNumber",
          "vHostName",
          "addOns",
          "productType",
          "productName"
        ]
      },
      "FindInstanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/100"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "PatchInstanceRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "maxLength": 255,
            "description": "The display name of the instance",
            "example": "VPS"
          }
        }
      },
      "PatchInstanceResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Instance's id",
            "example": 12345,
            "format": "int64"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date of the instance",
            "example": "2021-06-02T12:32:03.363Z"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "createdDate"
        ]
      },
      "PatchInstanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchInstanceResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "ReinstallInstanceRequest": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "string",
            "description": "ImageId to be used to setup the compute instance.",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752"
          },
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Array of `secretId`s of public SSH keys for logging into as `defaultUser` with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management API.",
            "example": "[123, 125]"
          },
          "rootPassword": {
            "type": "integer",
            "format": "int64",
            "description": "`secretId` of the password for the `defaultUser` with administrator/root privileges. For Linux/BSD please use SSH, for Windows RDP. Please refer to Secrets Management API.",
            "example": 1
          },
          "userData": {
            "type": "string",
            "description": "[Cloud-Init](https://cloud-init.io/) Config in order to customize during start of compute instance.",
            "example": "#cloud-config\nuser: admin\ntimezone: Europe/Berlin\nchpasswd:\n expire: False"
          },
          "defaultUser": {
            "type": "string",
            "enum": [
              "root",
              "admin",
              "administrator"
            ],
            "description": "Default user name created for login during (re-)installation with administrative privileges. Allowed values for Linux/BSD are `admin` (use sudo to apply administrative privileges like root) or `root`. Allowed values for Windows are `admin` (has administrative privileges like administrator) or `administrator`.",
            "example": "root",
            "default": "admin"
          },
          "applicationId": {
            "type": "string",
            "description": "Application ID",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752"
          }
        },
        "required": [
          "imageId"
        ]
      },
      "ReinstallInstanceResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Instance's id",
            "example": 12345,
            "format": "int64"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date for instance",
            "example": "2021-06-02T12:32:03.363Z"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "createdDate"
        ]
      },
      "ReinstallInstanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReinstallInstanceResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "ExtraStorageRequest": {
        "type": "object",
        "properties": {
          "ssd": {
            "description": "Specify the size in TB and the quantity",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nvme": {
            "description": "Specify the size in TB and the quantity",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AddOnRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the Addon. Please refer to list [here](https://contabo.com/en/product-list/?show_ids=true).",
            "example": 1019
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "The number of Addons you wish to aquire.",
            "example": 4
          }
        },
        "required": [
          "id",
          "quantity"
        ]
      },
      "CreateInstanceAddons": {
        "type": "object",
        "properties": {
          "privateNetworking": {
            "type": "object",
            "description": "Set this attribute if you want to upgrade your instance with the Private Networking addon.   Please provide an empty object for the time being as value. There will be more configuration possible   in the future.",
            "example": {}
          },
          "additionalIps": {
            "type": "object",
            "description": "Set this attribute if you want to upgrade your instance with the Additional IPs addon. Please provide an empty object for the time being as value. There will be more configuration possible in the future.",
            "example": {}
          },
          "extraStorage": {
            "description": "Set this attribute if you want to upgrade your instance with the Extra Storage addon.",
            "example": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtraStorageRequest"
              }
            ]
          },
          "customImage": {
            "type": "object",
            "description": "Set this attribute if you want to upgrade your instance with the Custom Images addon.   Please provide an empty object for the time being as value. There will be more configuration possible   in the future.",
            "example": {}
          },
          "addonsIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOnRequest"
            }
          }
        }
      },
      "CreateInstanceRequest": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "string",
            "description": "ImageId to be used to setup the compute instance. Default is Ubuntu 22.04",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752",
            "default": "afecbb85-e2fc-46f0-9684-b46b1faf00bb"
          },
          "productId": {
            "type": "string",
            "minLength": 1,
            "description": "Default is V45",
            "example": "V45",
            "default": "V45"
          },
          "region": {
            "type": "string",
            "enum": [
              "EU",
              "US-central",
              "US-east",
              "US-west",
              "SIN",
              "UK",
              "AUS",
              "JPN",
              "SIN",
              "IND"
            ],
            "minLength": 1,
            "description": "Instance Region where the compute instance should be located. Default is EU",
            "example": "EU",
            "default": "EU"
          },
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Array of `secretId`s of public SSH keys for logging into as `defaultUser` with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management API.",
            "example": "[123, 125]"
          },
          "rootPassword": {
            "type": "integer",
            "format": "int64",
            "description": "`secretId` of the password for the `defaultUser` with administrator/root privileges. For Linux/BSD please use SSH, for Windows RDP. Please refer to Secrets Management API.",
            "example": 1
          },
          "userData": {
            "type": "string",
            "description": "[Cloud-Init](https://cloud-init.io/) Config in order to customize during start of compute instance.",
            "example": "#cloud-config\nuser: admin\ntimezone: Europe/Berlin\nchpasswd:\n expire: False"
          },
          "license": {
            "type": "string",
            "description": "Additional licence in order to enhance your chosen product, mainly needed for software licenses on your product (not needed for windows).",
            "enum": [
              "cPanel5",
              "cPanel30",
              "cPanel50",
              "cPanel100",
              "cPanel150",
              "cPanel200",
              "cPanel250",
              "cPanel300",
              "cPanel350",
              "cPanel400",
              "cPanel450",
              "cPanel500",
              "cPanel550",
              "cPanel600",
              "cPanel650",
              "cPanel700",
              "cPanel750",
              "cPanel800",
              "cPanel850",
              "cPanel900",
              "cPanel950",
              "cPanel1000",
              "PleskAdmin",
              "PleskHost",
              "PleskPro"
            ],
            "example": "PleskHost"
          },
          "period": {
            "type": "integer",
            "format": "int64",
            "description": "Initial contract period in months. Available periods are: 1, 3, 6 and 12 months. Default to 1 month",
            "example": 6,
            "default": 1
          },
          "displayName": {
            "type": "string",
            "maxLength": 255,
            "description": "The display name of the instance",
            "example": "VPS"
          },
          "defaultUser": {
            "type": "string",
            "enum": [
              "root",
              "admin",
              "administrator"
            ],
            "description": "Default user name created for login during (re-)installation with administrative privileges. Allowed values for Linux/BSD are `admin` (use sudo to apply administrative privileges like root) or `root`. Allowed values for Windows are `admin` (has administrative privileges like administrator) or `administrator`.",
            "example": "root",
            "default": "admin"
          },
          "addOns": {
            "description": "Set attributes in the addons object for the corresponding ones that need to be added to the instance",
            "example": {
              "privateNetworking": {},
              "additionalIps": {},
              "extraStorage": {},
              "customImage": {}
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateInstanceAddons"
              }
            ]
          },
          "applicationId": {
            "type": "string",
            "description": "Application ID",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752"
          }
        },
        "required": [
          "period"
        ]
      },
      "CreateInstanceResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Instance's id",
            "example": 12345,
            "format": "int64"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date for instance",
            "example": "2021-06-02T12:32:03.363Z"
          },
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image's id"
          },
          "productId": {
            "type": "string",
            "description": "Product ID",
            "example": "V45"
          },
          "region": {
            "type": "string",
            "description": "Instance Region where the compute instance should be located.",
            "example": "EU"
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOnResponse"
            }
          },
          "osType": {
            "type": "string",
            "description": "Type of operating system (OS)",
            "example": "Linux"
          },
          "status": {
            "description": "Instance's status",
            "example": "running",
            "$ref": "#/components/schemas/instanceStatus"
          },
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Array of `secretId`s of public SSH keys for logging into as `defaultUser` with administrator/root privileges. Applies to Linux/BSD systems. Please refer to Secrets Management API.",
            "example": [
              123,
              125
            ]
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "createdDate",
          "imageId",
          "productId",
          "region",
          "addOns",
          "osType",
          "status",
          "sshKeys"
        ]
      },
      "CreateInstanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInstanceResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "CancelInstanceRequest": {
        "type": "object",
        "properties": {}
      },
      "CancelInstanceResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "instanceId": {
            "type": "integer",
            "description": "Instance's id",
            "example": 12345,
            "format": "int64"
          },
          "cancelDate": {
            "type": "string",
            "format": "date",
            "description": "The date on which the instance will be cancelled",
            "example": "2021-06-03"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "cancelDate"
        ]
      },
      "CancelInstanceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelInstanceResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FirewallingUpgradeRequest": {
        "type": "object",
        "properties": {
          "assignFirewalls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IDs of firewalls the upgraded instance should be assigned to immediately.   If the list is empty or this property is not provided the instance will be assigned to   your current default firewall."
          }
        }
      },
      "PrivateNetworkingUpgradeRequest": {
        "type": "object",
        "properties": {}
      },
      "Backup": {
        "type": "object",
        "properties": {}
      },
      "AddOnQuantityRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "The number of Addons you wish to aquire.",
            "example": 4
          }
        },
        "required": [
          "quantity"
        ]
      },
      "UpgradeInstanceRequest": {
        "type": "object",
        "properties": {
          "privateNetworking": {
            "description": "Set this attribute if you want to upgrade your instance with the Private Networking addon. Please provide an empty object for the time being as value. There will be more configuration possible in the future.",
            "example": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/PrivateNetworkingUpgradeRequest"
              }
            ]
          }
        }
      },
      "InstancesActionsAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "The ID of the audit entry."
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "Id of user who performed the change",
            "example": "c4c800ff-e524-47dd-9543-71dfc8b91113"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John.Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "instanceId": {
            "type": "integer",
            "minimum": 0,
            "example": 12345,
            "format": "int64",
            "description": "The identifier of the instancesActions"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId",
          "instanceId"
        ]
      },
      "ListInstancesActionsAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstancesActionsAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/instances/actions/audits?page=2",
              "previous": "/v1/compute/instances/actions/audits?page=2",
              "next": "/v1/compute/instances/actions/audits?page=3",
              "last": "/v1/compute/instances/actions/audits?page=10",
              "self": "/v1/compute/instances/actions/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "InstancesAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "The ID of the audit entry."
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "Id of user who performed the change",
            "example": "c4c800ff-e524-47dd-9543-71dfc8b91113"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John.Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "instanceId": {
            "type": "integer",
            "minimum": 0,
            "example": 12345,
            "format": "int64",
            "description": "The identifier of the instance"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId",
          "instanceId"
        ]
      },
      "ListInstancesAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstancesAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/instances/audits?page=2",
              "previous": "/v1/compute/instances/audits?page=2",
              "next": "/v1/compute/instances/audits?page=3",
              "last": "/v1/compute/instances/audits?page=10",
              "self": "/v1/compute/instances/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "AssignedTagResponse": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "number",
            "example": 12345,
            "description": "Tag's id"
          },
          "tagName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "Tag's name",
            "example": "Web-Server"
          }
        },
        "required": [
          "tagId",
          "tagName"
        ]
      },
      "ListImageResponseData": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image's id"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE",
            "enum": [
              "DE",
              "INT"
            ]
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "Image Name",
            "example": "Custom Image Ubuntu"
          },
          "description": {
            "type": "string",
            "description": "Image Description",
            "example": "Ubuntu Server 20.04.2 LTS"
          },
          "url": {
            "type": "string",
            "description": "URL from where the image has been downloaded / provided.",
            "example": "https://example.com/image.qcow2"
          },
          "sizeMb": {
            "type": "number",
            "description": "Image Size in MB",
            "example": 1024
          },
          "uploadedSizeMb": {
            "type": "number",
            "description": "Image Uploaded Size in MB",
            "example": 1024
          },
          "osType": {
            "type": "string",
            "description": "Type of operating system (OS)",
            "example": "Linux"
          },
          "version": {
            "type": "string",
            "description": "Version number to distinguish the contents of an image. Could be the version of the operating system for example.",
            "example": "20.04.2"
          },
          "format": {
            "type": "string",
            "description": "Image format",
            "example": "iso",
            "enum": [
              "iso",
              "qcow2"
            ]
          },
          "status": {
            "type": "string",
            "description": "Image status (e.g. if image is still downloading)",
            "example": "Pending"
          },
          "errorMessage": {
            "type": "string",
            "description": "Image download error message",
            "example": "Error downloading image from provided URL"
          },
          "standardImage": {
            "type": "boolean",
            "description": "Flag indicating that image is either a standard (true) or a custom image (false)",
            "example": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date time for the image",
            "example": "2021-06-03T06:27:12.000Z"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The last modified date time for the image",
            "example": "2021-06-04T06:27:12.000Z"
          },
          "tags": {
            "description": "The tags assigned to the image",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignedTagResponse"
            }
          }
        },
        "required": [
          "imageId",
          "tenantId",
          "customerId",
          "name",
          "description",
          "url",
          "sizeMb",
          "uploadedSizeMb",
          "osType",
          "version",
          "format",
          "status",
          "errorMessage",
          "standardImage",
          "creationDate",
          "lastModifiedDate",
          "tags"
        ]
      },
      "ListImageResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListImageResponseData"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/images?page=1",
              "previous": "/v1/compute/images?page=19",
              "self": "/v1/compute/images?page=20",
              "next": "/v1/compute/images?page=21",
              "last": "/v1/compute/images?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "CreateCustomImageRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Image Name",
            "example": "Ubuntu Custom Image"
          },
          "description": {
            "type": "string",
            "description": "Image Description",
            "example": "Ubuntu Server 20.04.2 LTS"
          },
          "url": {
            "type": "string",
            "description": "URL from where the image has been downloaded / provided.",
            "example": "https://example.com/image.qcow2"
          },
          "osType": {
            "type": "string",
            "description": "Provided type of operating system (OS). Please specify `Windows` for MS Windows and `Linux` for other OS. Specifying wrong OS type may lead to disfunctional cloud instance.",
            "enum": [
              "Windows",
              "Linux"
            ],
            "example": "Linux"
          },
          "version": {
            "type": "string",
            "description": "Version number to distinguish the contents of an image. Could be the version of the operating system for example.",
            "example": "20.04.2"
          }
        },
        "required": [
          "name",
          "url",
          "osType",
          "version"
        ]
      },
      "CreateCustomImageResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image's id"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "imageId"
        ]
      },
      "CreateCustomImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCustomImageResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/images/9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "CreateCustomImageFailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unsupported Media Type",
            "description": "Unsupported Media Type: Please provide a direct link to an .iso or .qcow2 image."
          },
          "statusCode": {
            "type": "integer",
            "example": "415",
            "description": "statuscode:415"
          }
        },
        "required": [
          "message",
          "statusCode"
        ]
      },
      "ImageResponse": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image's id"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE",
            "enum": [
              "DE",
              "INT"
            ]
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "Image Name",
            "example": "Custom Image Ubuntu"
          },
          "description": {
            "type": "string",
            "description": "Image Description",
            "example": "Ubuntu Server 20.04.2 LTS"
          },
          "url": {
            "type": "string",
            "description": "URL from where the image has been downloaded / provided.",
            "example": "https://example.com/image.qcow2"
          },
          "sizeMb": {
            "type": "number",
            "description": "Image Size in MB",
            "example": 1024
          },
          "uploadedSizeMb": {
            "type": "number",
            "description": "Image Uploaded Size in MB",
            "example": 1024
          },
          "osType": {
            "type": "string",
            "description": "Type of operating system (OS)",
            "example": "Linux"
          },
          "version": {
            "type": "string",
            "description": "Version number to distinguish the contents of an image. Could be the version of the operating system for example.",
            "example": "20.04.2"
          },
          "format": {
            "type": "string",
            "description": "Image format",
            "example": "iso",
            "enum": [
              "iso",
              "qcow2"
            ]
          },
          "status": {
            "type": "string",
            "description": "Image status (e.g. if image is still downloading)",
            "example": "Pending"
          },
          "errorMessage": {
            "type": "string",
            "description": "Image download error message",
            "example": "Error downloading image from provided URL"
          },
          "standardImage": {
            "type": "boolean",
            "description": "Flag indicating that image is either a standard (true) or a custom image (false)",
            "example": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The creation date time for the image",
            "example": "2021-06-03T06:27:12.000Z"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The last modified date time for the image",
            "example": "2021-06-04T06:27:12.000Z"
          }
        },
        "required": [
          "imageId",
          "tenantId",
          "customerId",
          "name",
          "description",
          "url",
          "sizeMb",
          "uploadedSizeMb",
          "osType",
          "version",
          "format",
          "status",
          "errorMessage",
          "standardImage",
          "creationDate",
          "lastModifiedDate"
        ]
      },
      "FindImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/images/9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UpdateCustomImageRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Image Name",
            "example": "Ubuntu Custom Image"
          },
          "description": {
            "type": "string",
            "description": "Image Description",
            "example": "Ubuntu 20.04 image"
          }
        }
      },
      "UpdateCustomImageResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image's id"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "imageId"
        ]
      },
      "UpdateCustomImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCustomImageResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/images/9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "CustomImagesStatsResponseData": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "54321"
          },
          "currentImagesCount": {
            "type": "number",
            "description": "The number of existing custom images",
            "example": 4
          },
          "totalSizeMb": {
            "type": "number",
            "description": "Total available disk space in MB",
            "example": 102400
          },
          "usedSizeMb": {
            "type": "number",
            "description": "Used disk space in MB",
            "example": 55000
          },
          "freeSizeMb": {
            "type": "number",
            "description": "Free disk space in MB",
            "example": 47400
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "currentImagesCount",
          "totalSizeMb",
          "usedSizeMb",
          "freeSizeMb"
        ]
      },
      "CustomImagesStatsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomImagesStatsResponseData"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/images/stats"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "SnapshotResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer number",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752"
          },
          "snapshotId": {
            "type": "string",
            "description": "Snapshot's id",
            "example": "snap1628603855"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The name of the snapshot.",
            "example": "Snapshot-Server"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The description of the snapshot.",
            "example": "Snapshot-Description"
          },
          "instanceId": {
            "type": "integer",
            "description": "The instance identifier associated with the snapshot",
            "example": 1234,
            "format": "int64"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the snapshot was created",
            "example": "2021-06-02T12:32:03.363Z"
          },
          "autoDeleteDate": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the snapshot will be auto-deleted",
            "example": "2021-07-02T12:32:03.363Z"
          },
          "imageId": {
            "type": "string",
            "description": "Image Id the snapshot was taken on",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
          },
          "imageName": {
            "type": "string",
            "description": "Image name the snapshot was taken on",
            "example": "ubuntu-18.04"
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "snapshotId",
          "name",
          "description",
          "instanceId",
          "createdDate",
          "autoDeleteDate",
          "imageId",
          "imageName"
        ]
      },
      "ListSnapshotResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/instances/12345/snapshots?page=1",
              "next": "/v1/compute/instances/12345/snapshots?page=19",
              "self": "/v1/compute/instances/12345/snapshots/snap1628603855",
              "previous": "/v1/compute/instances/12345/snapshots?page=21",
              "last": "/v1/compute/instances/12345/snapshots?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "CreateSnapshotRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "example": "Snapshot-Server",
            "description": "The name of the snapshot. It may contain letters, numbers, spaces, dashes. There is a limit of 30 characters per snapshot."
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Snapshot-Description",
            "description": "The description of the snapshot. There is a limit of 255 characters per snapshot."
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateSnapshotResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/snapshots/snap1628603855"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "FindSnapshotResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/snapshots/snap1628603855"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "UpdateSnapshotRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "example": "Snapshot-Server",
            "description": "The name of the snapshot. Tags may contain only letters, numbers, spaces, dashes. There is a limit of 30 characters per snapshot."
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "Snapshot-Description",
            "description": "The description of the snapshot. There is a limit of 255 characters per snapshot."
          }
        }
      },
      "UpdateSnapshotResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/12345/snapshots/snap1628603855"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "RollbackSnapshotRequest": {
        "type": "object",
        "properties": {}
      },
      "RollbackSnapshotResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "description": "Links for easy navigation.",
            "example": {
              "self": "/v1/compute/instances/12345/snapshots/snap1628603855"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "_links"
        ]
      },
      "ApplicationConfig": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Image ID"
          },
          "userDataId": {
            "type": "string",
            "example": "8b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "User Data ID"
          },
          "userData": {
            "type": "string",
            "description": "[Cloud-Init](https://cloud-init.io/) Config in order to customize during start of compute instance.",
            "example": "#cloud-config\nuser: admin\ntimezone: Europe/Berlin\nchpasswd:\n expire: False"
          }
        },
        "required": [
          "imageId",
          "userDataId",
          "userData"
        ]
      },
      "MinimumRequirements": {
        "type": "object",
        "properties": {
          "cpuCores": {
            "type": "number",
            "example": 2,
            "description": "CPU Cores Requirement"
          },
          "ramMb": {
            "type": "number",
            "example": 100,
            "description": "Memory Requirement in MB"
          },
          "diskMb": {
            "type": "number",
            "example": 500,
            "description": "Storage Requirement in MB"
          }
        }
      },
      "OptimalRequirements": {
        "type": "object",
        "properties": {
          "cpuCores": {
            "type": "number",
            "example": 2,
            "description": "CPU Cores Requirement"
          },
          "ramMb": {
            "type": "number",
            "example": 100,
            "description": "Memory Requirement in MB"
          },
          "diskMb": {
            "type": "number",
            "example": 500,
            "description": "Storage Requirement in MB"
          }
        }
      },
      "ApplicationRequirements": {
        "type": "object",
        "properties": {
          "minimum": {
            "description": "Application minimum requirements",
            "allOf": [
              {
                "$ref": "#/components/schemas/MinimumRequirements"
              }
            ]
          },
          "optimal": {
            "description": "Application optimal requirements",
            "allOf": [
              {
                "$ref": "#/components/schemas/OptimalRequirements"
              }
            ]
          }
        }
      },
      "ApplicationResponse": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
            "description": "Application ID"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Tenant ID",
            "example": "DE",
            "enum": [
              "DE",
              "INT"
            ]
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "Application Name",
            "example": "Webmin"
          },
          "description": {
            "type": "string",
            "description": "Application Description",
            "example": "Webmin cloud init"
          },
          "type": {
            "type": "string",
            "description": "Application type",
            "example": "standard",
            "enum": [
              "standard",
              "crypto"
            ]
          },
          "applicationConfig": {
            "description": "Application Config",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationConfig"
            }
          },
          "requirements": {
            "description": "Application Requirements",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationRequirements"
              }
            ]
          }
        },
        "required": [
          "applicationId",
          "tenantId",
          "customerId",
          "name",
          "description",
          "type",
          "applicationConfig",
          "requirements"
        ]
      },
      "ListApplicationsResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/applications?page=1",
              "previous": "/v1/compute/applications?page=19",
              "self": "/v1/compute/applications?page=20",
              "next": "/v1/compute/applications?page=21",
              "last": "/v1/compute/applications?page=101"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "VncResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Your customer tenant id",
            "example": "DE",
            "enum": [
              "DE",
              "INT"
            ]
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "3f184ab8-a600-4e7c-8c9b-3413e21a3752"
          },
          "instanceId": {
            "type": "integer",
            "description": "Instance ID",
            "example": 100,
            "format": "int64"
          },
          "enabled": {
            "type": "boolean",
            "description": "VNC Status for the instance.",
            "example": true
          },
          "vncIp": {
            "type": "string",
            "description": "VNC IP for the instance.",
            "example": "154.12.54.123"
          },
          "vncPort": {
            "type": "number",
            "description": "VNC Port for the instance.",
            "example": 8001
          }
        },
        "required": [
          "tenantId",
          "customerId",
          "instanceId",
          "enabled",
          "vncIp",
          "vncPort"
        ]
      },
      "FindVncResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VncResponse"
            }
          },
          "_links": {
            "example": {
              "self": "/v1/compute/instances/100/vnc"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinks"
              }
            ]
          }
        },
        "required": [
          "data",
          "_links"
        ]
      },
      "PatchVncRequest": {
        "type": "object",
        "properties": {
          "vncPassword": {
            "type": "string",
            "description": "Password for instance VNC",
            "example": "test123"
          }
        },
        "required": [
          "vncPassword"
        ]
      },
      "ImageAuditResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "The ID of the audit entry."
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "Id of user who performed the change",
            "example": "c4c800ff-e524-47dd-9543-71dfc8b91113"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John.Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "imageId": {
            "type": "string",
            "example": "e443eab5-647a-4bc3-b4f9-16f5a281224d",
            "description": "The identifier of the image"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes.",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId",
          "imageId"
        ]
      },
      "ImageAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageAuditResponseData"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/images/audits?page=2",
              "previous": "/v1/compute/images/audits?page=2",
              "next": "/v1/compute/images/audits?page=3",
              "last": "/v1/compute/images/audits?page=10",
              "self": "/v1/compute/images/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      },
      "SnapshotsAuditResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "12345",
            "description": "The ID of the audit entry."
          },
          "action": {
            "type": "string",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ],
            "example": "CREATED",
            "description": "Type of the action."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the change took place.",
            "example": "2021-03-30T11:35:06.177Z"
          },
          "tenantId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer tenant id",
            "example": "DE"
          },
          "customerId": {
            "type": "string",
            "minLength": 1,
            "description": "Customer ID",
            "example": "54321"
          },
          "changedBy": {
            "type": "string",
            "minLength": 1,
            "description": "Id of user who performed the change",
            "example": "c4c800ff-e524-47dd-9543-71dfc8b91113"
          },
          "username": {
            "type": "string",
            "description": "Name of the user which led to the change.",
            "example": "John.Doe"
          },
          "requestId": {
            "type": "string",
            "description": "The requestId of the API call which led to the change.",
            "example": "A2F56FAF-18N0-4893-11HG-R312M1E4FEC5"
          },
          "traceId": {
            "type": "string",
            "description": "The traceId of the API call which led to the change.",
            "example": "78E9A428-94E9-4A2A-92F5-26038C6884F"
          },
          "instanceId": {
            "type": "integer",
            "minimum": 0,
            "example": 12345,
            "format": "int64",
            "description": "The identifier of the instance"
          },
          "snapshotId": {
            "type": "string",
            "description": "The identifier of the snapshot",
            "example": "snap1628603855"
          },
          "changes": {
            "type": "object",
            "description": "List of actual changes",
            "example": {
              "prev": {
                "name": "test"
              },
              "new": {
                "name": "test1"
              }
            }
          }
        },
        "required": [
          "id",
          "action",
          "timestamp",
          "tenantId",
          "customerId",
          "changedBy",
          "username",
          "requestId",
          "traceId",
          "instanceId",
          "snapshotId"
        ]
      },
      "ListSnapshotsAuditResponse": {
        "type": "object",
        "properties": {
          "_pagination": {
            "description": "Data about pagination like how many results, pages, page size.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotsAuditResponse"
            }
          },
          "_links": {
            "example": {
              "first": "/v1/compute/snapshots/audits?page=2",
              "previous": "/v1/compute/snapshots/audits?page=2",
              "next": "/v1/compute/snapshots/audits?page=3",
              "last": "/v1/compute/snapshots/audits?page=10",
              "self": "/v1/compute/snapshots/audits"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Links"
              }
            ]
          }
        },
        "required": [
          "_pagination",
          "data",
          "_links"
        ]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Compute instances",
      "tags": [
        "Instances",
        "Instances Audits",
        "Instance Actions",
        "Instance Actions Audits",
        "Snapshots",
        "Snapshots Audits",
        "Applications"
      ]
    },
    {
      "name": "Compute images",
      "tags": [
        "Images",
        "Images Audits"
      ]
    },
    {
      "name": "Object Storages",
      "tags": [
        "Object Storages",
        "Object Storages Audits"
      ]
    },
    {
      "name": "Private Networks",
      "tags": [
        "Private Networks",
        "Private Networks Audits"
      ]
    },
    {
      "name": "Tags",
      "tags": [
        "Tags",
        "Tag Assignments",
        "Tags Audits",
        "Tag Assignments Audits"
      ]
    },
    {
      "name": "Users",
      "tags": [
        "Users",
        "Roles",
        "Users Audits",
        "Roles Audits"
      ]
    },
    {
      "name": "Secrets",
      "tags": [
        "Secrets",
        "Secrets Audits"
      ]
    },
    {
      "name": "Network Management",
      "tags": [
        "VIP"
      ]
    }
  ],
  "tags": [
    {
      "name": "Instances",
      "description": "The Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping)\nas well as managing snapshots and custom images. It also supports [cloud-init](https://cloud-init.io/) at least on our default images\n(for custom images you'll need to provide cloud-init support packages). The API offers providing [cloud-init](https://cloud-init.io/) scripts via the `user_data` field.\nCustom images must be provided in .qcow2 or .iso format."
    },
    {
      "name": "Instances Audits",
      "description": "The Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping)\nas well as managing snapshots and custom images. It also supports [cloud-init](https://cloud-init.io/) at least on our default images\n(for custom images you'll need to provide cloud-init support packages). The API offers providing [cloud-init](https://cloud-init.io/) scripts via the `user_data` field.\nCustom images must be provided in .qcow2 or .iso format."
    },
    {
      "name": "Instance Actions",
      "description": "The Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping)\nas well as managing snapshots and custom images. It also supports [cloud-init](https://cloud-init.io/) at least on our default images\n(for custom images you'll need to provide cloud-init support packages). The API offers providing [cloud-init](https://cloud-init.io/) scripts via the `user_data` field.\nCustom images must be provided in .qcow2 or .iso format."
    },
    {
      "name": "Instance Actions Audits",
      "description": "The Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping)\nas well as managing snapshots and custom images. It also supports [cloud-init](https://cloud-init.io/) at least on our default images\n(for custom images you'll need to provide cloud-init support packages). The API offers providing [cloud-init](https://cloud-init.io/) scripts via the `user_data` field.\nCustom images must be provided in .qcow2 or .iso format."
    },
    {
      "name": "Images",
      "description": "The Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping)\nas well as managing snapshots and custom images. It also supports [cloud-init](https://cloud-init.io/) at least on our default images\n(for custom images you'll need to provide cloud-init support packages). The API offers providing [cloud-init](https://cloud-init.io/) scripts via the `user_data` field.\nCustom images must be provided in .qcow2 or .iso format."
    },
    {
      "name": "Images Audits",
      "description": "The Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping)\nas well as managing snapshots and custom images. It also supports [cloud-init](https://cloud-init.io/) at least on our default images\n(for custom images you'll need to provide cloud-init support packages). The API offers providing [cloud-init](https://cloud-init.io/) scripts via the `user_data` field.\nCustom images must be provided in .qcow2 or .iso format."
    },
    {
      "name": "VNC",
      "description": "The Compute Management API allows you to manage compute resources (e.g. creation, deletion, starting, stopping)\nas well as managing snapshots and custom images. It also supports [cloud-init](https://cloud-init.io/) at least on our default images\n(for custom images you'll need to provide cloud-init support packages). The API offers providing [cloud-init](https://cloud-init.io/) scripts via the `user_data` field.\nCustom images must be provided in .qcow2 or .iso format."
    },
    {
      "name": "Object Storages",
      "description": "Manage S3 compatible Object Storage. With the Object Storage API you can create Object Storage in different locations. Please note that you can only have one Object Storage per location. Furthermore you can increase the amount of storage space and control the autoscaling feature which allows to automatically perform a monthly upgrade of the disk space to the specified maximum. You might also inspect the usage. This API is not the S3 API itself. For accessing the S3 API directly or with S3 compatible tools like `aws` cli after and after having created / upgraded your Object Storage please use the S3 URL from this Storage API and refer to the User Mangement API to retrieve the S3 credentials."
    },
    {
      "name": "Object Storages Audits",
      "description": "Manage S3 compatible Object Storage. With the Object Storage API you can create Object Storage in different locations. Please note that you can only have one Object Storage per location. Furthermore you can increase the amount of storage space and control the autoscaling feature which allows to automatically perform a monthly upgrade of the disk space to the specified maximum. You might also inspect the usage. This API is not the S3 API itself. For accessing the S3 API directly or with S3 compatible tools like `aws` cli after and after having created / upgraded your Object Storage please use the S3 URL from this Storage API and refer to the User Mangement API to retrieve the S3 credentials."
    },
    {
      "name": "Private Networks",
      "description": "Private Networking API allows you to create and manage Private Networks / Virtual Private Vloud (VPC) for your instances (Cloud VPS/VDS). Private Network / VPC allows private and direct communication between instances using private IPs. Traffic doesn't leave a Data Center. This feature requires a payed add-on for each instance being part of a Private Network. Instance can be part of multiple Private Networks."
    },
    {
      "name": "Private Networks Audits",
      "description": "Private Networking API allows you to create and manage Private Networks / Virtual Private Vloud (VPC) for your instances (Cloud VPS/VDS). Private Network / VPC allows private and direct communication between instances using private IPs. Traffic doesn't leave a Data Center. This feature requires a payed add-on for each instance being part of a Private Network. Instance can be part of multiple Private Networks."
    },
    {
      "name": "Tags",
      "description": "Tags are Customer-defined labels which can be attached to any resource in your account. Tag API represent simple CRUD functions and allow you to manage your tags.\nUse tags to group your resources. For example you can define some user group with tag and give them permission to create compute instances."
    },
    {
      "name": "Tags Audits",
      "description": "Tags are Customer-defined labels which can be attached to any resource in your account. Tag API represent simple CRUD functions and allow you to manage your tags.\nUse tags to group your resources. For example you can define some user group with tag and give them permission to create compute instances."
    },
    {
      "name": "Tag Assignments",
      "description": "Tags are Customer-defined labels which can be attached to any resource in your account. Tag API represent simple CRUD functions and allow you to manage your tags.\nUse tags to group your resources. For example you can define some user group with tag and give them permission to create compute instances."
    },
    {
      "name": "Tag Assignments Audits",
      "description": "Tags are Customer-defined labels which can be attached to any resource in your account. Tag API represent simple CRUD functions and allow you to manage your tags.\nUse tags to group your resources. For example you can define some user group with tag and give them permission to create compute instances."
    },
    {
      "name": "Users",
      "description": "Give access to all api endpoints and resources or manage to which endpoints and resources individual users might have access to. Permissions are organized in roles. Users can have roles assigned. Roles can grant and restrict access to different API's or to specific resources. Permissions for resources are declared by using tags which have been assigned to resources."
    },
    {
      "name": "Users Audits",
      "description": "Give access to all api endpoints and resources or manage to which endpoints and resources individual users might have access to. Permissions are organized in roles. Users can have roles assigned. Roles can grant and restrict access to different API's or to specific resources. Permissions for resources are declared by using tags which have been assigned to resources."
    },
    {
      "name": "Roles",
      "description": "Give access to all api endpoints and resources or manage to which endpoints and resources individual users might have access to. Permissions are organized in roles. Users can have roles assigned. Roles can grant and restrict access to different API's or to specific resources. Permissions for resources are declared by using tags which have been assigned to resources."
    },
    {
      "name": "Roles Audits",
      "description": "Give access to all api endpoints and resources or manage to which endpoints and resources individual users might have access to. Permissions are organized in roles. Users can have roles assigned. Roles can grant and restrict access to different API's or to specific resources. Permissions for resources are declared by using tags which have been assigned to resources."
    },
    {
      "name": "Secrets",
      "description": "The Secret Management API allows you to store and manage your passwords and ssh-keys. Usage of the Secret Management API is purely optional. As a convenience feature e.g. it allows you to reuse SSH-keys easily."
    },
    {
      "name": "Secrets Audits",
      "description": "The Secret Management API allows you to store and manage your passwords and ssh-keys. Usage of the Secret Management API is purely optional. As a convenience feature e.g. it allows you to reuse SSH-keys easily."
    },
    {
      "name": "VIP",
      "description": "VIP (Virtual IPs) API manages virtual IP adresses including ´additional´ and ´floating´ IPv4 Adresses. Virtual IPs are payed add-ons (Additional IP) which can be freely assigned to Cloud VPS/VDS or Bare Metal. Please note, that assgnments of virtual IPs to servers is only for documentation purposes. Technical Assignemts must be configured on operation system level, see [docs](https://docs.contabo.com/docs/products/intro)."
    }
  ]
}
